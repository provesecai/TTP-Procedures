<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">
<graph id="DecryptMalwareBinary" edgedefault="directed">
<!--  Nodes  -->
<node id="A">
<data key="label">Retrieve Encrypted Malware Binary</data>
</node>
<node id="B">
<data key="label">Decrypt Malware Binary in Memory</data>
</node>
<node id="C">
<data key="label">Load Decrypted Binary into Process</data>
</node>
<node id="D">
<data key="label">Remove Decryption Traces</data>
</node>
<node id="E">
<data key="label">Defense Evasion Achieved</data>
</node>
<!--  Edges with Conditions/Weaknesses  -->
<edge source="A" target="B">
<data key="label">Download encrypted binary from external source Third Party Control: Cloud Web Security Gateways</data>
</edge>
<edge source="A" target="B">
<data key="label">Detect anomalies in encrypted file transfer Corporate Control: Network Intrusion Detection Systems</data>
</edge>
<edge source="A" target="B">
<data key="label">Monitor for unknown encrypted file formats Third Party Control: Cloud-Based Threat Intelligence</data>
</edge>
<edge source="A" target="B">
<data key="label">Log unusual encrypted file downloads Corporate Control: SIEM Event Correlation</data>
</edge>
<edge source="B" target="C">
<data key="label">Decrypt malware binary using hardcoded key Corporate Control: Endpoint Detection and Response (EDR)</data>
</edge>
<edge source="B" target="C">
<data key="label">Detect unauthorized decryption routines Corporate Control: Memory Integrity Protection</data>
</edge>
<edge source="B" target="C">
<data key="label">Analyze suspicious memory decryption patterns Third Party Control: Advanced Threat Intelligence Feeds</data>
</edge>
<edge source="B" target="C">
<data key="label">Monitor system calls related to decryption Third Party Control: Cloud Security Monitoring</data>
</edge>
<edge source="C" target="D">
<data key="label">Inject decrypted binary into another process Corporate Control: Process Hollowing Detection</data>
</edge>
<edge source="C" target="D">
<data key="label">Monitor unauthorized process memory modifications Corporate Control: Host-Based Intrusion Prevention Systems</data>
</edge>
<edge source="C" target="D">
<data key="label">Detect suspicious parent-child process relationships Third Party Control: Cloud Endpoint Security</data>
</edge>
<edge source="C" target="D">
<data key="label">Log and analyze injected binary execution Third Party Control: SOC Threat Intelligence</data>
</edge>
<edge source="D" target="E">
<data key="label">Clear decryption key from memory Corporate Control: Memory Scrubbing Techniques</data>
</edge>
<edge source="D" target="E">
<data key="label">Modify timestamps to evade forensic tools Third Party Control: Cloud Forensic Services</data>
</edge>
<edge source="D" target="E">
<data key="label">Evade antivirus detection with in-memory execution Corporate Control: Advanced Evasion Frameworks</data>
</edge>
<edge source="D" target="E">
<data key="label">Persist execution using stealth techniques Third Party Control: Cloud Endpoint Protection Platforms</data>
</edge>
<edge source="D" target="E">
<data key="label">Defense evasion successfully implemented Corporate Control: SOC Continuous Monitoring</data>
</edge>
</graph>
</graphml>
