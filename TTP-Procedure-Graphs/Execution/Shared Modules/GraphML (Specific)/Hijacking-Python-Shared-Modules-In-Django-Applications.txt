<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">
<graph id="HijackingPythonSharedModulesInDjangoApplications" edgedefault="directed">
<!-- Nodes -->
<node id="A">
<data key="label">InitialAccess</data>
</node>
<node id="B">
<data key="label">PostAccessPreparation</data>
</node>
<node id="C">
<data key="label">PayloadDelivery</data>
</node>
<node id="D">
<data key="label">PreExecutionSetup</data>
</node>
<node id="E">
<data key="label">ExecutionAchieved</data>
</node>
<!-- Edges -->
<edge source="A" target="B">
<data key="label">Access gained via vulnerable Django API Corporate Control: API Logs</data>
</edge>
<edge source="A" target="B">
<data key="label">Identify Python shared modules within the Django project Corporate Control: Project Dependencies</data>
</edge>
<edge source="A" target="B">
<data key="label">Enumerate writable shared modules Corporate Control: File System Permissions</data>
</edge>
<edge source="A" target="B">
<data key="label">Monitor for unusual enumeration of Python files Corporate Control: SIEM Alerts</data>
</edge>
<edge source="B" target="C">
<data key="label">Inject malicious code into a Python shared module Corporate Control: Development Environment</data>
</edge>
<edge source="B" target="C">
<data key="label">Validate compatibility with Django runtime Corporate Control: Test Environment Logs</data>
</edge>
<edge source="B" target="C">
<data key="label">Ensure obfuscation of injected logic Corporate Control: Endpoint Protection Systems</data>
</edge>
<edge source="B" target="C">
<data key="label">Monitor for unauthorized modifications to Python files Corporate Control: File Integrity Monitoring</data>
</edge>
<edge source="C" target="D">
<data key="label">Replace the legitimate module with the malicious one Corporate Control: Deployment Logs</data>
</edge>
<edge source="C" target="D">
<data key="label">Validate module integration into the Django project Corporate Control: Behavioral Monitoring</data>
</edge>
<edge source="C" target="D">
<data key="label">Monitor for resource consumption anomalies Corporate Control: SIEM Systems</data>
</edge>
<edge source="D" target="E">
<data key="label">Trigger Django application to load the malicious module Corporate Control: Application Logs</data>
</edge>
<edge source="D" target="E">
<data key="label">Detect runtime anomalies during module execution Corporate Control: Endpoint Monitoring Systems</data>
</edge>
<edge source="D" target="E">
<data key="label">Malicious code executes within the Django environment Corporate Control: Execution Logs</data>
</edge>
<edge source="D" target="E">
<data key="label">Monitor for unauthorized API calls or network traffic Corporate Control: Behavioral Analytics</data>
</edge>
</graph>
</graphml>
