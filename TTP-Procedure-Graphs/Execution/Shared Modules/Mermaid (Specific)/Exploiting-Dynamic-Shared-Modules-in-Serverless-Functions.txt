graph TD;
    A[InitialAccess]
    B[PostAccessPreparation]
    C[PayloadDelivery]
    D[PreExecutionSetup]
    E[ExecutionAchieved]

    A -->|"Access gained via misconfigured AWS Lambda permissions Corporate Control: AWS CloudTrail Logs"| B
    A -->|"Enumerate shared modules dynamically loaded by the Lambda runtime Corporate Control: Function Configuration Files"| B
    A -->|"Monitor for unauthorized access to Lambda environment Corporate Control: Behavioral Analytics"| B
    A -->|"Detect anomalies in function configuration changes Corporate Control: SIEM Systems"| B
    B -->|"Craft malicious shared modules with identical interfaces to legitimate ones Corporate Control: Development Environment"| C
    B -->|"Ensure compatibility with serverless runtime Corporate Control: Test Environment Logs"| C
    B -->|"Obfuscate payload to bypass runtime integrity checks Corporate Control: Runtime Security Tools"| C
    B -->|"Monitor for unauthorized modifications to Lambda configurations Corporate Control: File Integrity Monitoring"| C
    C -->|"Inject malicious shared modules into the Lambda runtime Corporate Control: Deployment Logs"| D
    C -->|"Validate seamless execution with existing workflows Corporate Control: Lambda Test Logs"| D
    C -->|"Monitor for unauthorized resource usage Corporate Control: Cloud Monitoring Tools"| D
    D -->|"Trigger Lambda execution to load the malicious module Corporate Control: Function Invocation Logs"| E
    D -->|"Detect runtime deviations in function behavior Corporate Control: AWS Security Hub"| E
    D -->|"Payload successfully executed via the malicious module Corporate Control: Execution Logs"| E
    D -->|"Monitor for unexpected network activity from the Lambda runtime Corporate Control: SIEM Alerts"| E
