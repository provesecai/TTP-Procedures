<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">
<graph id="HijackingSharedLibrariesInContainerizedEnvironments" edgedefault="directed">
<!-- Nodes -->
<node id="A">
<data key="label">InitialAccess</data>
</node>
<node id="B">
<data key="label">PostAccessPreparation</data>
</node>
<node id="C">
<data key="label">PayloadDelivery</data>
</node>
<node id="D">
<data key="label">PreExecutionSetup</data>
</node>
<node id="E">
<data key="label">ExecutionAchieved</data>
</node>
<!-- Edges -->
<edge source="A" target="B">
<data key="label">Access gained via compromised container runtime credentials Corporate Control: Container Logs</data>
</edge>
<edge source="A" target="B">
<data key="label">Identify shared libraries loaded by containerized applications Corporate Control: Container Configuration Files</data>
</edge>
<edge source="A" target="B">
<data key="label">Scan container images for writable shared libraries Corporate Control: Image Scan Results</data>
</edge>
<edge source="A" target="B">
<data key="label">Monitor for unauthorized scans of containerized environments Corporate Control: SIEM Systems</data>
</edge>
<edge source="B" target="C">
<data key="label">Craft a malicious shared library matching original signatures Corporate Control: Development Environment</data>
</edge>
<edge source="B" target="C">
<data key="label">Inject malicious logic into library while maintaining compatibility Corporate Control: Test Environment Logs</data>
</edge>
<edge source="B" target="C">
<data key="label">Ensure payload bypasses runtime integrity checks Corporate Control: Runtime Protection Tools</data>
</edge>
<edge source="B" target="C">
<data key="label">Monitor for unauthorized file changes in containerized environments Corporate Control: File Integrity Monitoring</data>
</edge>
<edge source="C" target="D">
<data key="label">Deploy malicious library into container image Corporate Control: Container Registry Logs</data>
</edge>
<edge source="C" target="D">
<data key="label">Rebuild container with modified library Corporate Control: Deployment Logs</data>
</edge>
<edge source="C" target="D">
<data key="label">Monitor for unauthorized container deployments Corporate Control: SIEM Systems</data>
</edge>
<edge source="D" target="E">
<data key="label">Trigger application within the container to load malicious library Corporate Control: Container Execution Logs</data>
</edge>
<edge source="D" target="E">
<data key="label">Detect deviations in container runtime behavior Corporate Control: Behavioral Analytics</data>
</edge>
<edge source="D" target="E">
<data key="label">Malicious code executes via the shared library Corporate Control: Execution Logs</data>
</edge>
<edge source="D" target="E">
<data key="label">Monitor for unauthorized outbound network connections Corporate Control: Endpoint Monitoring Systems</data>
</edge>
</graph>
</graphml>
