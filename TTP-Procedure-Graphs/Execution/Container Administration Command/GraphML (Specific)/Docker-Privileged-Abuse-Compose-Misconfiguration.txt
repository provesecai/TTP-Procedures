<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">
<graph id="DockerPrivilegedAbuseComposeMisconfiguration" edgedefault="directed">
<!-- Nodes -->
<node id="A">
<data key="label">Initial Foothold Gained</data>
</node>
<node id="B">
<data key="label">Prepare for Docker Compose Exploitation</data>
</node>
<node id="C">
<data key="label">Deploy Malicious Container Using Compose</data>
</node>
<node id="D">
<data key="label">Access Host Resources via Privileged Container</data>
</node>
<node id="E">
<data key="label">Execution Achieved</data>
</node>
<!-- Edges -->
<edge source="A" target="B">
<data key="label">Access gained via exposed Docker Compose files Corporate Control: GitHub Repository</data>
</edge>
<edge source="A" target="B">
<data key="label">Foothold established by identifying compose files with --privileged flag Corporate Control: Source Code Repository</data>
</edge>
<edge source="A" target="B">
<data key="label">Detection possible by monitoring for unauthorized repository access Corporate Control: SIEM Systems</data>
</edge>
<edge source="B" target="C">
<data key="label">Prepare malicious container definition in compose file Corporate Control: Docker Compose File</data>
</edge>
<edge source="B" target="C">
<data key="label">Add volume mounts to access sensitive host files Corporate Control: File System</data>
</edge>
<edge source="B" target="C">
<data key="label">Monitor for unauthorized changes to compose files Corporate Control: Source Control Logs</data>
</edge>
<edge source="B" target="C">
<data key="label">Ensure container images appear legitimate Corporate Control: Image Repository</data>
</edge>
<edge source="C" target="D">
<data key="label">Deploy container using compromised compose file Corporate Control: Docker Daemon</data>
</edge>
<edge source="C" target="D">
<data key="label">Leverage container's privileged access to escalate to host Corporate Control: Host System</data>
</edge>
<edge source="C" target="D">
<data key="label">Avoid detection by disguising container as part of the deployment Corporate Control: Monitoring Tools</data>
</edge>
<edge source="C" target="D">
<data key="label">Monitor for unusual container activity Corporate Control: Docker Monitoring Tools</data>
</edge>
<edge source="D" target="E">
<data key="label">Execute commands on the host system through the privileged container Corporate Control: Host Namespace</data>
</edge>
<edge source="D" target="E">
<data key="label">Achieve control over host resources Corporate Control: Target Environment</data>
</edge>
<edge source="D" target="E">
<data key="label">Monitor for anomalies in container-host interactions Corporate Control: Security Analytics</data>
</edge>
<edge source="D" target="E">
<data key="label">Execution achieves attacker control over the Docker environment Corporate Control: Docker Infrastructure</data>
</edge>
</graph>
</graphml>
