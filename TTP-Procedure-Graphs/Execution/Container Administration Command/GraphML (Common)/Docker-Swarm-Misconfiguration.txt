<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">
<graph id="DockerSwarmMisconfiguration" edgedefault="directed">
<!-- Nodes -->
<node id="A">
<data key="label">Initial Foothold Gained</data>
</node>
<node id="B">
<data key="label">Prepare for Docker Swarm Exploitation</data>
</node>
<node id="C">
<data key="label">Deploy Malicious Service in Swarm</data>
</node>
<node id="D">
<data key="label">Trigger Service Execution</data>
</node>
<node id="E">
<data key="label">Execution Achieved</data>
</node>
<!-- Edges -->
<edge source="A" target="B">
<data key="label">Access gained via exposed Docker Swarm manager Corporate Control: Docker Manager Node</data>
</edge>
<edge source="A" target="B">
<data key="label">Foothold established by authenticating to Docker Swarm manager Corporate Control: Docker Swarm API</data>
</edge>
<edge source="A" target="B">
<data key="label">Detection possible by monitoring access to Swarm manager Corporate Control: Docker Logs</data>
</edge>
<edge source="B" target="C">
<data key="label">Prepare malicious service for deployment Corporate Control: Service Repository</data>
</edge>
<edge source="B" target="C">
<data key="label">Inject payload into service configurations Corporate Control: Docker Service Configurations</data>
</edge>
<edge source="B" target="C">
<data key="label">Monitor for unauthorized changes to service definitions Corporate Control: File Integrity Monitoring</data>
</edge>
<edge source="B" target="C">
<data key="label">Ensure compatibility with Swarm runtime Corporate Control: Docker Configuration</data>
</edge>
<edge source="C" target="D">
<data key="label">Deploy malicious service to worker nodes in the Swarm Corporate Control: Docker Worker Nodes</data>
</edge>
<edge source="C" target="D">
<data key="label">Leverage service tasks to execute commands Corporate Control: Docker Service Tasks</data>
</edge>
<edge source="C" target="D">
<data key="label">Avoid detection by disguising service as legitimate Corporate Control: Docker Logs</data>
</edge>
<edge source="C" target="D">
<data key="label">Monitor for anomalies in service deployments Corporate Control: Docker Monitoring Tools</data>
</edge>
<edge source="D" target="E">
<data key="label">Execute malicious service tasks to achieve attacker objectives Corporate Control: Target Infrastructure</data>
</edge>
<edge source="D" target="E">
<data key="label">Validate execution by exfiltrating data from worker nodes Corporate Control: Network Monitoring</data>
</edge>
<edge source="D" target="E">
<data key="label">Execution completes, achieving full compromise of Docker Swarm Corporate Control: Swarm Infrastructure</data>
</edge>
<edge source="D" target="E">
<data key="label">Monitor for unusual behavior in worker nodes Corporate Control: Security Tools</data>
</edge>
</graph>
</graphml>