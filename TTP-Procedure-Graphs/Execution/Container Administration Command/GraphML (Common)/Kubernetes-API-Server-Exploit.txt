<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">
<graph id="KubernetesAPIServerExploit" edgedefault="directed">
<!-- Nodes -->
<node id="A">
<data key="label">Initial Foothold Gained</data>
</node>
<node id="B">
<data key="label">Prepare for API Server Exploitation</data>
</node>
<node id="C">
<data key="label">Send Malicious API Requests</data>
</node>
<node id="D">
<data key="label">Access Cluster Resources</data>
</node>
<node id="E">
<data key="label">Execution Achieved</data>
</node>
<!-- Edges -->
<edge source="A" target="B">
<data key="label">Access gained via compromised Kubernetes service account token Corporate Control: Kubernetes Authentication</data>
</edge>
<edge source="A" target="B">
<data key="label">Foothold established by authenticating to Kubernetes API server Corporate Control: Kubernetes API Server</data>
</edge>
<edge source="A" target="B">
<data key="label">Detection possible by monitoring for unauthorized API requests Corporate Control: Kubernetes Logs</data>
</edge>
<edge source="B" target="C">
<data key="label">Prepare malicious API requests targeting critical cluster components Corporate Control: API Server Configuration</data>
</edge>
<edge source="B" target="C">
<data key="label">Modify requests to bypass security policies Corporate Control: Kubernetes RBAC</data>
</edge>
<edge source="B" target="C">
<data key="label">Avoid detection by mimicking legitimate API requests Corporate Control: API Monitoring</data>
</edge>
<edge source="B" target="C">
<data key="label">Monitor for unauthorized namespace access Corporate Control: Kubernetes Security Tools</data>
</edge>
<edge source="C" target="D">
<data key="label">Deploy workloads using API calls Corporate Control: Kubernetes Workloads</data>
</edge>
<edge source="C" target="D">
<data key="label">Leverage elevated privileges to execute commands Corporate Control: Cluster Nodes</data>
</edge>
<edge source="C" target="D">
<data key="label">Monitor for unusual workload creation Corporate Control: Kubernetes Activity Logs</data>
</edge>
<edge source="C" target="D">
<data key="label">Detection possible via behavioral analysis of API traffic Corporate Control: SIEM Systems</data>
</edge>
<edge source="D" target="E">
<data key="label">Execute commands within the Kubernetes cluster Corporate Control: Cluster Resources</data>
</edge>
<edge source="D" target="E">
<data key="label">Achieve full control over cluster workloads Corporate Control: Cluster Nodes</data>
</edge>
<edge source="D" target="E">
<data key="label">Monitor for anomalies in cluster activity Corporate Control: Kubernetes Monitoring Tools</data>
</edge>
<edge source="D" target="E">
<data key="label">Execution achieves cluster compromise Corporate Control: Kubernetes Environment</data>
</edge>
</graph>
</graphml>
