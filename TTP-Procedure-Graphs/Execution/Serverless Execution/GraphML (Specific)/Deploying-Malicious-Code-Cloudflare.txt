<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">
<graph id="DeployingMaliciousCodeCloudflareWorkers" edgedefault="directed">
<!-- Nodes -->
<node id="A">
<data key="label">Initial Access</data>
</node>
<node id="B">
<data key="label">Post Access Preparation</data>
</node>
<node id="C">
<data key="label">Payload Delivery</data>
</node>
<node id="D">
<data key="label">Pre Execution Setup</data>
</node>
<node id="E">
<data key="label">Execution Achieved</data>
</node>
<!-- Edges -->
<edge source="A" target="B">
<data key="label">Compromised API token provides access to Cloudflare account Corporate Control: Cloudflare Access Logs</data>
</edge>
<edge source="A" target="B">
<data key="label">Enumerate workers for writable endpoints Corporate Control: Cloudflare Worker Configurations</data>
</edge>
<edge source="A" target="B">
<data key="label">Monitor for unauthorized access to worker scripts Corporate Control: SIEM Alerts</data>
</edge>
<edge source="A" target="B">
<data key="label">Detect anomalies in API activity Corporate Control: Behavioral Analytics</data>
</edge>
<edge source="B" target="C">
<data key="label">Inject malicious logic into worker script Corporate Control: Worker Script Repository</data>
</edge>
<edge source="B" target="C">
<data key="label">Obfuscate payload to avoid detection Corporate Control: Endpoint Protection Tools</data>
</edge>
<edge source="B" target="C">
<data key="label">Set triggers for malicious script execution Corporate Control: Cloudflare Event Triggers</data>
</edge>
<edge source="B" target="C">
<data key="label">Monitor for unauthorized script modifications Corporate Control: File Integrity Monitoring</data>
</edge>
<edge source="C" target="D">
<data key="label">Deploy modified worker to Cloudflare infrastructure Corporate Control: Deployment Logs</data>
</edge>
<edge source="C" target="D">
<data key="label">Ensure compatibility with existing workflows Corporate Control: Application Integration Logs</data>
</edge>
<edge source="C" target="D">
<data key="label">Monitor for unusual changes to worker configurations Corporate Control: Behavioral Analytics</data>
</edge>
<edge source="D" target="E">
<data key="label">Trigger worker execution via HTTP requests Corporate Control: Worker Invocation Logs</data>
</edge>
<edge source="D" target="E">
<data key="label">Detect runtime deviations in worker behavior Corporate Control: SIEM Systems</data>
</edge>
<edge source="D" target="E">
<data key="label">Malicious code executes within worker context Corporate Control: Execution Logs</data>
</edge>
</graph>
</graphml>
