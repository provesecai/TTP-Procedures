<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">
<graph id="ManipulatingSaltStackStates" edgedefault="directed">
<!-- Nodes -->
<node id="A">
<data key="label">InitialAccess</data>
</node>
<node id="B">
<data key="label">PostAccessPreparation</data>
</node>
<node id="C">
<data key="label">PayloadDelivery</data>
</node>
<node id="D">
<data key="label">PreExecutionSetup</data>
</node>
<node id="E">
<data key="label">ExecutionAchieved</data>
</node>
<!-- Edges -->
<edge source="A" target="B">
<data key="label">Access obtained via exposed Salt Master API Corporate Control: API Gateway Logs</data>
</edge>
<edge source="A" target="B">
<data key="label">Enumerate Salt states and configurations Corporate Control: SaltStack State Files</data>
</edge>
<edge source="A" target="B">
<data key="label">Identify writable states targeting critical minions Corporate Control: SaltStack Access Control Logs</data>
</edge>
<edge source="A" target="B">
<data key="label">Monitor unauthorized access to Salt configurations Corporate Control: SIEM Alerts</data>
</edge>
<edge source="B" target="C">
<data key="label">Modify Salt states to include malicious commands Corporate Control: State Repository Logs</data>
</edge>
<edge source="B" target="C">
<data key="label">Embed obfuscated scripts for stealth Corporate Control: Endpoint Protection Systems</data>
</edge>
<edge source="B" target="C">
<data key="label">Test compatibility of malicious states with target systems Corporate Control: Test Environment Logs</data>
</edge>
<edge source="B" target="C">
<data key="label">Monitor unauthorized modifications to Salt files Corporate Control: File Integrity Monitoring</data>
</edge>
<edge source="C" target="D">
<data key="label">Deploy modified states to target minions via Salt Master Corporate Control: Deployment Logs</data>
</edge>
<edge source="C" target="D">
<data key="label">Validate integration of malicious states into workflows Corporate Control: Behavioral Monitoring Systems</data>
</edge>
<edge source="C" target="D">
<data key="label">Monitor anomalies during state execution Corporate Control: SaltStack Job Logs</data>
</edge>
<edge source="D" target="E">
<data key="label">Trigger Salt minion execution of modified states Corporate Control: Minion Logs</data>
</edge>
<edge source="D" target="E">
<data key="label">Detect runtime deviations during execution Corporate Control: Endpoint Monitoring Systems</data>
</edge>
<edge source="D" target="E">
<data key="label">Payload executes successfully on target systems Corporate Control: Process Logs</data>
</edge>
<edge source="D" target="E">
<data key="label">Monitor unauthorized outbound network activity Corporate Control: Network Monitoring Tools</data>
</edge>
</graph>
</graphml>
