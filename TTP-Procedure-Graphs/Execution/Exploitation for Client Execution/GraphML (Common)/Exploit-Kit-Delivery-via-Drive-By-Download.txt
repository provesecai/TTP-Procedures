<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">
<graph id="ExploitKitDeliveryDriveByDownload" edgedefault="directed">
<!-- Nodes -->
<node id="A">
<data key="label">Initial Foothold Gained</data>
</node>
<node id="B">
<data key="label">Prepare Exploit Kit</data>
</node>
<node id="C">
<data key="label">Deliver Exploit Kit via Compromised Website</data>
</node>
<node id="D">
<data key="label">Trigger Vulnerability Exploit on Victim's Browser</data>
</node>
<node id="E">
<data key="label">Execution Achieved</data>
</node>
<!-- Edges -->
<edge source="A" target="B">
<data key="label">Access granted via malicious URL in phishing email Corporate Control: Victim's Email</data>
</edge>
<edge source="A" target="B">
<data key="label">Identify browser vulnerabilities to target via exploit kit Third Party Control: Browser Vendor</data>
</edge>
<edge source="A" target="B">
<data key="label">Foothold established by compromising hosting servers for exploit distribution Corporate Control: Hosting Provider</data>
</edge>
<edge source="A" target="B">
<data key="label">Detection possible through monitoring for anomalous URL requests Corporate Control: Web Filtering Systems</data>
</edge>
<edge source="B" target="C">
<data key="label">Develop or purchase exploit kits for specific vulnerabilities Third Party Control: Underground Marketplace</data>
</edge>
<edge source="B" target="C">
<data key="label">Host exploit kit on a compromised website Corporate Control: Web Hosting Service</data>
</edge>
<edge source="B" target="C">
<data key="label">Ensure compatibility with commonly used browser versions Corporate Control: Victim's Browser</data>
</edge>
<edge source="B" target="C">
<data key="label">Evade detection by using HTTPS and obfuscation techniques Corporate Control: Secure Web Gateway</data>
</edge>
<edge source="C" target="D">
<data key="label">Deliver exploit when victim visits malicious website Corporate Control: Victim's Browser</data>
</edge>
<edge source="C" target="D">
<data key="label">Trigger vulnerability within the browser runtime Corporate Control: Browser Engine</data>
</edge>
<edge source="C" target="D">
<data key="label">Exploit leads to malicious payload execution Corporate Control: Victim Machine</data>
</edge>
<edge source="C" target="D">
<data key="label">Monitor for exploit activity via web application logs Corporate Control: WAF Logs</data>
</edge>
<edge source="D" target="E">
<data key="label">Payload successfully executes, providing attacker access Corporate Control: Endpoint Device</data>
</edge>
<edge source="D" target="E">
<data key="label">Execution achieves compromise of victim's browser environment Corporate Control: Target System</data>
</edge>
<edge source="D" target="E">
<data key="label">Detection possible via anomalous browser memory activity Corporate Control: Endpoint Monitoring Tools</data>
</edge>
<edge source="D" target="E">
<data key="label">Attack objectives achieved through browser exploitation Corporate Control: Target Infrastructure</data>
</edge>
</graph>
</graphml>
