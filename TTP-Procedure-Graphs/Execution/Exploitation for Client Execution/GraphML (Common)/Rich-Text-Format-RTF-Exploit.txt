<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">
<graph id="RichTextFormatRTFExploit" edgedefault="directed">
<!-- Nodes -->
<node id="A">
<data key="label">Initial Foothold Gained</data>
</node>
<node id="B">
<data key="label">Craft Malicious RTF File</data>
</node>
<node id="C">
<data key="label">Deliver File via Email Attachment</data>
</node>
<node id="D">
<data key="label">Trigger Exploit in Target RTF Reader</data>
</node>
<node id="E">
<data key="label">Execution Achieved</data>
</node>
<!-- Edges -->
<edge source="A" target="B">
<data key="label">Access gained via phishing campaign Corporate Control: Victim's Email</data>
</edge>
<edge source="A" target="B">
<data key="label">Analyze vulnerabilities in RTF file parsing Corporate Control: Text Processor Vendor</data>
</edge>
<edge source="A" target="B">
<data key="label">Foothold established by embedding payload in RTF format tags Corporate Control: RTF Metadata</data>
</edge>
<edge source="A" target="B">
<data key="label">Detection possible by scanning for malformed RTF files Corporate Control: Email Gateway</data>
</edge>
<edge source="B" target="C">
<data key="label">Prepare malicious RTF file targeting a specific vulnerability Corporate Control: Document Creator</data>
</edge>
<edge source="B" target="C">
<data key="label">Ensure payload bypasses security measures Corporate Control: Email Security Tools</data>
</edge>
<edge source="B" target="C">
<data key="label">Monitor for successful delivery and opening Corporate Control: User Interaction Logs</data>
</edge>
<edge source="B" target="C">
<data key="label">Evade detection by disguising file as legitimate Corporate Control: File Metadata</data>
</edge>
<edge source="C" target="D">
<data key="label">Deliver RTF file to victim via email attachment Corporate Control: Email Inbox</data>
</edge>
<edge source="C" target="D">
<data key="label">Trigger exploit when file is opened Corporate Control: Victim's Text Processor</data>
</edge>
<edge source="C" target="D">
<data key="label">Monitor for RTF parsing anomalies Corporate Control: Endpoint Protection</data>
</edge>
<edge source="C" target="D">
<data key="label">Achieve payload execution through targeted parsing exploit Corporate Control: Text Reader Runtime</data>
</edge>
<edge source="D" target="E">
<data key="label">Execution successfully completed in victim's environment Corporate Control: Target System</data>
</edge>
<edge source="D" target="E">
<data key="label">Attacker gains control over the victim's device Corporate Control: Endpoint Infrastructure</data>
</edge>
<edge source="D" target="E">
<data key="label">Detection possible through endpoint anomaly analysis Corporate Control: Endpoint Monitoring Tools</data>
</edge>
<edge source="D" target="E">
<data key="label">Execution achieved through RTF exploitation Corporate Control: Target Machine</data>
</edge>
</graph>
</graphml>