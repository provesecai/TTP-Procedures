<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">
<graph id="ProcessInjection" edgedefault="directed">
<!-- Nodes -->
<node id="A">
<data key="label">Initial Foothold Gained</data>
</node>
<node id="B">
<data key="label">Identify Target Process for Injection</data>
</node>
<node id="C">
<data key="label">Allocate Memory in Target Process Using VirtualAllocEx</data>
</node>
<node id="D">
<data key="label">Inject Malicious Payload into Allocated Memory</data>
</node>
<node id="E">
<data key="label">Trigger Execution of Payload via Remote Thread</data>
</node>
<!-- Edges -->
<edge source="A" target="B">
<data key="label">Access gained via phishing campaign Corporate Control: Email Security Gateway</data>
</edge>
<edge source="A" target="B">
<data key="label">Deploy script to enumerate active processes Corporate Control: Task Manager Logs</data>
</edge>
<edge source="A" target="B">
<data key="label">Monitor for unusual process enumeration activities Corporate Control: SIEM Logs</data>
</edge>
<edge source="B" target="C">
<data key="label">Select target process with elevated privileges Corporate Control: Process Privilege Logs</data>
</edge>
<edge source="B" target="C">
<data key="label">Ensure target process has writable and executable memory Corporate Control: Memory Protection Logs</data>
</edge>
<edge source="B" target="C">
<data key="label">Monitor for unauthorized API calls interacting with sensitive processes Corporate Control: Endpoint Monitoring</data>
</edge>
<edge source="C" target="D">
<data key="label">Allocate memory in the target process using VirtualAllocEx API Corporate Control: Memory Allocation Logs</data>
</edge>
<edge source="C" target="D">
<data key="label">Prepare malicious payload for injection Corporate Control: Payload Development Environment</data>
</edge>
<edge source="C" target="D">
<data key="label">Monitor API usage related to memory allocation Corporate Control: Endpoint Protection Systems</data>
</edge>
<edge source="D" target="E">
<data key="label">Inject malicious payload into allocated memory using WriteProcessMemory Corporate Control: Process Memory</data>
</edge>
<edge source="D" target="E">
<data key="label">Monitor memory injection activities for unauthorized behavior Corporate Control: Behavioral Analytics</data>
</edge>
<edge source="E" target="E">
<data key="label">Trigger payload execution via CreateRemoteThread API Corporate Control: Thread Execution Context</data>
</edge>
<edge source="E" target="E">
<data key="label">Monitor anomalies in thread execution behavior Corporate Control: Endpoint Monitoring Tools</data>
</edge>
</graph>
</graphml>
