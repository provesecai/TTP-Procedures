<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">
<graph id="CodeInjectionRemoteThread" edgedefault="directed">
<!-- Nodes -->
<node id="A">
<data key="label">Initial Foothold Gained</data>
</node>
<node id="B">
<data key="label">Identify Target Process for Injection</data>
</node>
<node id="C">
<data key="label">Inject Malicious Code Using CreateRemoteThread</data>
</node>
<node id="D">
<data key="label">Trigger Execution of Code Within Target Process</data>
</node>
<!-- Edges -->
<edge source="A" target="B">
<data key="label">Access gained via phishing email Corporate Control: Email Gateway</data>
</edge>
<edge source="A" target="B">
<data key="label">Analyze active processes to find injection targets Corporate Control: Process Tree Logs</data>
</edge>
<edge source="A" target="B">
<data key="label">Monitor for suspicious process enumeration Corporate Control: SIEM Alerts</data>
</edge>
<edge source="B" target="C">
<data key="label">Select process with elevated privileges (e.g., svchost.exe) Corporate Control: Process Permissions</data>
</edge>
<edge source="B" target="C">
<data key="label">Monitor for anomalies in process handle access Corporate Control: Behavioral Detection Tools</data>
</edge>
<edge source="C" target="D">
<data key="label">Inject shellcode or payload using CreateRemoteThread API Corporate Control: Target Process Memory</data>
</edge>
<edge source="C" target="D">
<data key="label">Monitor thread creation actions for unauthorized behavior Corporate Control: Endpoint Protection Systems</data>
</edge>
<edge source="C" target="D">
<data key="label">Trigger execution of payload within the context of the target process Corporate Control: Process Runtime</data>
</edge>
<edge source="C" target="D">
<data key="label">Monitor for anomalies in thread behavior Corporate Control: SIEM Logs</data>
</edge>
</graph>
</graphml>
