<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">
<graph id="JavaScriptCredentialTheftOktaSSO" edgedefault="directed">
<!-- Nodes -->
<node id="A">
<data key="label">Initial Foothold Gained</data>
</node>
<node id="B">
<data key="label">Prepare for JavaScript Injection on Okta</data>
</node>
<node id="C">
<data key="label">Inject Malicious JavaScript into Login Page</data>
</node>
<node id="D">
<data key="label">Trigger Credential Harvesting via Login Form</data>
</node>
<node id="E">
<data key="label">Credential Theft Achieved</data>
</node>
<!-- Edges -->
<edge source="A" target="B">
<data key="label">Access gained via phishing email directing to a compromised Okta login page Corporate Control: User Email System</data>
</edge>
<edge source="A" target="B">
<data key="label">Victim clicks link, landing on a malicious Okta-branded login page Corporate Control: Web Browser</data>
</edge>
<edge source="A" target="B">
<data key="label">Foothold established by injecting JavaScript into custom login fields Corporate Control: SSO Customization</data>
</edge>
<edge source="A" target="B">
<data key="label">Detection possible by monitoring unusual login page changes Corporate Control: SIEM Systems</data>
</edge>
<edge source="B" target="C">
<data key="label">Inject JavaScript to capture user keystrokes during login Corporate Control: Web Application Logs</data>
</edge>
<edge source="B" target="C">
<data key="label">Obfuscate script to evade detection Corporate Control: Browser Security</data>
</edge>
<edge source="B" target="C">
<data key="label">Embed script using developer access to Okta customization settings Corporate Control: Admin Console</data>
</edge>
<edge source="B" target="C">
<data key="label">Monitor for unexpected changes in Okta configurations Corporate Control: SSO Activity Logs</data>
</edge>
<edge source="C" target="D">
<data key="label">Capture credentials during user authentication Corporate Control: Okta Login Form</data>
</edge>
<edge source="C" target="D">
<data key="label">Exfiltrate credentials to an attacker-controlled server Corporate Control: Network Firewall</data>
</edge>
<edge source="C" target="D">
<data key="label">Detection possible by monitoring unusual HTTP POST requests Corporate Control: SIEM Logs</data>
</edge>
<edge source="C" target="D">
<data key="label">Monitor for anomalies in authentication activity Corporate Control: Okta Security Tools</data>
</edge>
<edge source="D" target="E">
<data key="label">Credentials successfully exfiltrated for further exploitation Corporate Control: User Accounts</data>
</edge>
<edge source="D" target="E">
<data key="label">Execution achieves attacker control over targeted accounts Corporate Control: Authentication Logs</data>
</edge>
<edge source="D" target="E">
<data key="label">Monitor for credential re-use in subsequent attacks Corporate Control: Endpoint Monitoring</data>
</edge>
<edge source="D" target="E">
<data key="label">Detection possible by correlating login activity with malicious scripts Corporate Control: Security Analytics</data>
</edge>
</graph>
</graphml>