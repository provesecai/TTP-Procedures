<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">
<graph id="PowerShellFilelessMalware" edgedefault="directed">
<!-- Nodes -->
<node id="A">
<data key="label">Initial Foothold Gained</data>
</node>
<node id="B">
<data key="label">Prepare for Fileless Execution</data>
</node>
<node id="C">
<data key="label">Deliver PowerShell Script</data>
</node>
<node id="D">
<data key="label">Execute In-Memory Payload</data>
</node>
<node id="E">
<data key="label">Fileless Execution Achieved</data>
</node>
<!-- Edges -->
<edge source="A" target="B">
<data key="label">Access gained via phishing delivering PowerShell loader link Corporate Control: Email System</data>
</edge>
<edge source="A" target="B">
<data key="label">Victim clicks link, downloading obfuscated PowerShell commands Corporate Control: Web Browser</data>
</edge>
<edge source="A" target="B">
<data key="label">Foothold established by invoking PowerShell remotely Corporate Control: Endpoint Monitoring</data>
</edge>
<edge source="A" target="B">
<data key="label">Detection possible via attachment scanning Corporate Control: Email Security Tools</data>
</edge>
<edge source="B" target="C">
<data key="label">Prepare PowerShell script to invoke AMSI bypass Corporate Control: Script Repository</data>
</edge>
<edge source="B" target="C">
<data key="label">Inject malicious payload into PowerShell runtime memory Corporate Control: Endpoint System</data>
</edge>
<edge source="B" target="C">
<data key="label">Obfuscate all PowerShell commands to evade detection Corporate Control: Script Logging</data>
</edge>
<edge source="B" target="C">
<data key="label">Monitor for AMSI bypass attempts Corporate Control: Security Tools</data>
</edge>
<edge source="C" target="D">
<data key="label">Execute script using PowerShell Invoke-Expression Corporate Control: PowerShell Host</data>
</edge>
<edge source="C" target="D">
<data key="label">Trigger payload delivery from remote C2 server Corporate Control: Network Monitoring</data>
</edge>
<edge source="C" target="D">
<data key="label">Detection possible via PowerShell Script Block Logging Corporate Control: SIEM Tools</data>
</edge>
<edge source="C" target="D">
<data key="label">Monitor for unusual PowerShell invocations Corporate Control: Endpoint Security</data>
</edge>
<edge source="D" target="E">
<data key="label">Payload runs entirely in memory, leaving no disk artifacts Corporate Control: Endpoint Memory</data>
</edge>
<edge source="D" target="E">
<data key="label">Validate execution through attacker-controlled C2 server Corporate Control: Network Infrastructure</data>
</edge>
<edge source="D" target="E">
<data key="label">Detection possible through behavioral analysis Corporate Control: Security Monitoring</data>
</edge>
<edge source="D" target="E">
<data key="label">Execution achieves attacker objectives Corporate Control: Host Environment</data>
</edge>
</graph>
</graphml>
