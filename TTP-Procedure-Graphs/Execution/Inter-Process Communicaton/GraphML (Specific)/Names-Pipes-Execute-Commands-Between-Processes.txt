<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">
<graph id="NamedPipesExecuteCommands" edgedefault="directed">
<!-- Nodes -->
<node id="A">
<data key="label">Initial Foothold Gained</data>
</node>
<node id="B">
<data key="label">Discover Active Named Pipes on the System</data>
</node>
<node id="C">
<data key="label">Set Up Malicious Named Pipe Server</data>
</node>
<node id="D">
<data key="label">Deliver Payload Commands via Pipe Communication</data>
</node>
<node id="E">
<data key="label">Trigger Execution on Target Process</data>
</node>
<!-- Edges -->
<edge source="A" target="B">
<data key="label">Access gained via remote phishing Corporate Control: Target Endpoint</data>
</edge>
<edge source="A" target="B">
<data key="label">Foothold established by executing an initial script dropper Corporate Control: User Device</data>
</edge>
<edge source="A" target="B">
<data key="label">Detection possible through EDR monitoring of new processes Corporate Control: Endpoint Detection</data>
</edge>
<edge source="B" target="C">
<data key="label">Use 'Get-ChildItem \\.\pipe\' to enumerate named pipes Corporate Control: Named Pipe Registry</data>
</edge>
<edge source="B" target="C">
<data key="label">Analyze pipes associated with inter-process communication flows Corporate Control: Pipe Access Logs</data>
</edge>
<edge source="B" target="C">
<data key="label">Monitor for unusual named pipe enumeration commands Corporate Control: SIEM Systems</data>
</edge>
<edge source="C" target="D">
<data key="label">Create malicious named pipe server with CreateNamedPipe() API Corporate Control: IPC Mechanism</data>
</edge>
<edge source="C" target="D">
<data key="label">Ensure permissions allow unauthenticated connections Corporate Control: Pipe Security Descriptor</data>
</edge>
<edge source="C" target="D">
<data key="label">Monitor for unauthorized named pipe creation Corporate Control: System Logs</data>
</edge>
<edge source="D" target="E">
<data key="label">Inject commands using WriteFile() to send malicious payload Corporate Control: Pipe Communication Channel</data>
</edge>
<edge source="D" target="E">
<data key="label">Deliver command buffers formatted to exploit process handlers Corporate Control: Target Process Memory</data>
</edge>
<edge source="D" target="E">
<data key="label">Monitor anomalies in IPC communication traffic Corporate Control: Endpoint Monitoring</data>
</edge>
<edge source="E" target="E">
<data key="label">Payload executes in the targeted process environment Corporate Control: Victim Process</data>
</edge>
<edge source="E" target="E">
<data key="label">Execution completes and attacker gains process control Corporate Control: Target Endpoint</data>
</edge>
</graph>
</graphml>
