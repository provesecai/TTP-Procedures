<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">
<graph id="Compromised-Third-Party-Code" edgedefault="directed">
<!--  Nodes  -->
<node id="A">
  <data key="label">Identify Popular Third-Party Scripts</data>
</node>
<node id="B">
  <data key="label">Inject Malicious Code into Libraries</data>
</node>
<node id="C">
  <data key="label">Code Distributed to Users</data>
</node>
<node id="D">
  <data key="label">Malicious Code Executes</data>
</node>
<node id="E">
  <data key="label">Initial Access</data>
</node>
<!--  Edges with Conditions/Weaknesses  -->
<edge source="A" target="B">
  <data key="label">Research widely-used scripts or libraries - Third Party Control: Open Source Repositories</data>
</edge>
<edge source="A" target="B">
  <data key="label">Identify vulnerabilities in code update processes - Corporate Control: Developer Tools</data>
</edge>
<edge source="A" target="B">
  <data key="label">Analyze usage patterns to maximize impact - Third Party Control: Analytics Data</data>
</edge>
<edge source="A" target="B">
  <data key="label">Target high-traffic projects for compromise - Corporate Control: Popular Repositories</data>
</edge>
<edge source="B" target="C">
  <data key="label">Insert malicious payloads into libraries - Third Party Control: Source Code</data>
</edge>
<edge source="B" target="C">
  <data key="label">Ensure payload execution during typical usage - Corporate Control: Injected Functions</data>
</edge>
<edge source="B" target="C">
  <data key="label">Contribute updates to open repositories - Corporate Control: Development Accounts</data>
</edge>
<edge source="B" target="C">
  <data key="label">Evade detection by masking malicious changes - Corporate Control: Obfuscation Techniques</data>
</edge>
<edge source="C" target="D">
  <data key="label">Updated code reaches end users - Third Party Control: Distribution Systems</data>
</edge>
<edge source="C" target="D">
  <data key="label">Users unknowingly install compromised libraries - Third Party Control: User Applications</data>
</edge>
<edge source="C" target="D">
  <data key="label">Malicious functions triggered during usage - Corporate Control: Application Runtime</data>
</edge>
<edge source="C" target="D">
  <data key="label">Monitor distribution to track effectiveness - Corporate Control: Analytics Tools</data>
</edge>
<edge source="D" target="E">
  <data key="label">Payload executes within user environments - Third Party Control: User Systems</data>
</edge>
<edge source="D" target="E">
  <data key="label">Establish initial compromise - Corporate Control: System Access</data>
</edge>
<edge source="D" target="E">
  <data key="label">Set up channels for future attacks - Corporate Control: Persistent Foothold</data>
</edge>
<edge source="D" target="E">
  <data key="label">Achieve initial access to victim's environment - Corporate Control: Compromise Outcome</data>
</edge>
</graph>
</graphml>
