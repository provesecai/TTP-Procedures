<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">
<graph id="Watering-Hole-WordPress" edgedefault="directed">
<!--  Nodes  -->
<node id="A">
<data key="label">Compromise WordPress Website</data>
</node>
<node id="B">
<data key="label">Inject Malicious JavaScript</data>
</node>
<node id="C">
<data key="label">Victim Visits Compromised Site</data>
</node>
<node id="D">
<data key="label">Deliver Exploit Payload</data>
</node>
<node id="E">
<data key="label">Initial Access Achieved</data>
</node>
<!--  Edges with Conditions/Weaknesses  -->
<edge source="A" target="B">
<data key="label">Identify WordPress sites with vulnerable plugins Corporate Control: WordPress Website</data>
</edge>
<edge source="A" target="B">
<data key="label">Exploit vulnerabilities like outdated plugins or themes Corporate Control: CMS Plugins</data>
</edge>
<edge source="A" target="B">
<data key="label">Gain admin access through credential stuffing Corporate Control: Admin Panel</data>
</edge>
<edge source="A" target="B">
<data key="label">Minimize detection by avoiding excessive activity Corporate Control: Website Logs</data>
</edge>
<edge source="B" target="C">
<data key="label">Inject malicious JavaScript into the site's pages Corporate Control: Website Codebase</data>
</edge>
<edge source="B" target="C">
<data key="label">Obfuscate script to bypass content security policies Corporate Control: Injected Script</data>
</edge>
<edge source="B" target="C">
<data key="label">Ensure persistent injection using backdoors Corporate Control: Website Files</data>
</edge>
<edge source="B" target="C">
<data key="label">Target specific users with geofencing or IP filtering Corporate Control: Script Payload</data>
</edge>
<edge source="C" target="D">
<data key="label">Victim's browser automatically loads malicious script Third Party Control: Victim Browser</data>
</edge>
<edge source="C" target="D">
<data key="label">Payload exploits browser vulnerabilities Third Party Control: Browser Components</data>
</edge>
<edge source="C" target="D">
<data key="label">Deliver malicious code to the victim's system Third Party Control: Payload Delivery</data>
</edge>
<edge source="C" target="D">
<data key="label">Monitor for detection triggers Corporate Control: Website Security</data>
</edge>
<edge source="D" target="E">
<data key="label">Payload executes on the victim's machine Third Party Control: Victim System</data>
</edge>
<edge source="D" target="E">
<data key="label">Initial access achieved through exploit delivery Third Party Control: Browser Environment</data>
</edge>
<edge source="D" target="E">
<data key="label">Set up for further exploitation Corporate Control: Compromised System</data>
</edge>
<edge source="D" target="E">
<data key="label">Maintain persistence for prolonged access Corporate Control: Initial Foothold</data>
</edge>
</graph>
</graphml>
