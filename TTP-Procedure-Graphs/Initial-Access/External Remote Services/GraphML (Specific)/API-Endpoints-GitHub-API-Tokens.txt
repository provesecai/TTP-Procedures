<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">
<graph id="API-Endpoints-GitHub-API-Tokens" edgedefault="directed">
<!--  Nodes  -->
<node id="A">
<data key="label">Identify Exposed GitHub API Tokens</data>
</node>
<node id="B">
<data key="label">Use Tokens to Access GitHub Repositories</data>
</node>
<node id="C">
<data key="label">Clone Repositories to Extract Sensitive Data</data>
</node>
<node id="D">
<data key="label">Analyze Data for Credentials or Keys</data>
</node>
<node id="E">
<data key="label">Initial Access Achieved</data>
</node>
<!--  Edges with Conditions/Weaknesses  -->
<edge source="A" target="B">
<data key="label">Search public repositories for exposed tokens Corporate Control: GitHub Repositories</data>
</edge>
<edge source="A" target="B">
<data key="label">Focus on files containing sensitive information Corporate Control: Repository Contents</data>
</edge>
<edge source="A" target="B">
<data key="label">Use automated tools like truffleHog or git-secrets Corporate Control: Token Scanners</data>
</edge>
<edge source="A" target="B">
<data key="label">Avoid detection by minimizing GitHub API requests Corporate Control: GitHub Activity Logs</data>
</edge>
<edge source="B" target="C">
<data key="label">Authenticate to GitHub using extracted tokens Corporate Control: GitHub API</data>
</edge>
<edge source="B" target="C">
<data key="label">Access private repositories linked to the token Corporate Control: GitHub Repositories</data>
</edge>
<edge source="B" target="C">
<data key="label">Enumerate repository contents for valuable data Corporate Control: Repository Files</data>
</edge>
<edge source="B" target="C">
<data key="label">Monitor for unusual token usage alerts Corporate Control: GitHub Security Alerts</data>
</edge>
<edge source="C" target="D">
<data key="label">Clone repositories to attacker-controlled systems Corporate Control: Repository Data</data>
</edge>
<edge source="C" target="D">
<data key="label">Search for plaintext credentials or SSH keys Corporate Control: Sensitive Files</data>
</edge>
<edge source="C" target="D">
<data key="label">Analyze configuration files for further attack paths Corporate Control: Repository Metadata</data>
</edge>
<edge source="C" target="D">
<data key="label">Ensure no trace of unauthorized access Corporate Control: Repository Logs</data>
</edge>
<edge source="D" target="E">
<data key="label">Use extracted credentials to access internal systems Corporate Control: Internal Services</data>
</edge>
<edge source="D" target="E">
<data key="label">Initial access achieved via GitHub API exploitation Corporate Control: Internal Network</data>
</edge>
<edge source="D" target="E">
<data key="label">Prepare for lateral movement Corporate Control: Internal Systems</data>
</edge>
<edge source="D" target="E">
<data key="label">Ensure persistence by modifying configurations Corporate Control: Repository Files</data>
</edge>
</graph>
</graphml>
