<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">
<graph id="Watering-Hole-JQuery" edgedefault="directed">
<!--  Nodes  -->
<node id="A">
<data key="label">Compromise jQuery Repository</data>
</node>
<node id="B">
<data key="label">Inject Malicious JavaScript into jQuery Library</data>
</node>
<node id="C">
<data key="label">Developers Include Compromised jQuery</data>
</node>
<node id="D">
<data key="label">Malicious Code Executes on User Devices</data>
</node>
<node id="E">
<data key="label">Initial Access Achieved</data>
</node>
<!--  Edges with Conditions/Weaknesses  -->
<edge source="A" target="B">
<data key="label">Exploit weak access controls on the jQuery repository Third Party Control: jQuery Repository</data>
</edge>
<edge source="A" target="B">
<data key="label">Replace legitimate versions with malicious code Corporate Control: Source Code</data>
</edge>
<edge source="B" target="C">
<data key="label">Ensure payload evades integrity checks Corporate Control: Code Signing</data>
</edge>
<edge source="B" target="C">
<data key="label">Obfuscate malicious functionality within library Third Party Control: Library Code</data>
</edge>
<edge source="C" target="D">
<data key="label">Developers unknowingly include compromised jQuery in projects Third Party Control: Developer Systems</data>
</edge>
<edge source="C" target="D">
<data key="label">End users trigger malicious code during site interactions Third Party Control: User Browsers</data>
</edge>
<edge source="D" target="E">
<data key="label">Payload collects credentials or sensitive information Corporate Control: User Systems</data>
</edge>
</graph>
</graphml>
