<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">
<graph id="USB-Malware-Drop-MacOS-USB-Keyboard" edgedefault="directed">
<!--  Nodes  -->
<node id="A">
<data key="label">Distribute USB Keyboards</data>
</node>
<node id="B">
<data key="label">Victim Connects Keyboard to MacOS Device</data>
</node>
<node id="C">
<data key="label">Malicious Commands Sent to MacOS</data>
</node>
<node id="D">
<data key="label">Payload Executes</data>
</node>
<node id="E">
<data key="label">Initial Access Achieved</data>
</node>
<!--  Edges with Conditions/Weaknesses  -->
<edge source="A" target="B">
<data key="label">Modify USB keyboard firmware Corporate Control: Device Manufacturing</data>
</edge>
<edge source="A" target="B">
<data key="label">Embed keystroke injection payloads Corporate Control: USB Design</data>
</edge>
<edge source="A" target="B">
<data key="label">Test compatibility with MacOS systems Corporate Control: Testing Environment</data>
</edge>
<edge source="B" target="C">
<data key="label">Victim plugs in malicious keyboard Third Party Control: Human Behavior</data>
</edge>
<edge source="B" target="C">
<data key="label">MacOS recognizes keyboard input automatically Third Party Control: MacOS Configuration</data>
</edge>
<edge source="B" target="C">
<data key="label">Keystrokes inject malicious commands Corporate Control: Malware Payload</data>
</edge>
<edge source="C" target="D">
<data key="label">Payload triggers persistence mechanisms Third Party Control: MacOS Environment</data>
</edge>
<edge source="C" target="D">
<data key="label">Backdoor is created for attacker access Third Party Control: MacOS System</data>
</edge>
<edge source="D" target="E">
<data key="label">Initial access confirmed through system exploitation Corporate Control: Target Compromise</data>
</edge>
</graph>
</graphml>
