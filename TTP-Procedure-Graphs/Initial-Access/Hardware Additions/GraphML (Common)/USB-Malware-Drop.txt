<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">
<graph id="USB-Malware-Drop" edgedefault="directed">
<!--  Nodes  -->
<node id="A">
<data key="label">Distribute Malicious USB Drives</data>
</node>
<node id="B">
<data key="label">Victim Inserts USB Drive</data>
</node>
<node id="C">
<data key="label">Malware Auto-Executes on System</data>
</node>
<node id="D">
<data key="label">Payload Activates</data>
</node>
<node id="E">
<data key="label">Initial Access Achieved</data>
</node>
<!--  Edges with Conditions/Weaknesses  -->
<edge source="A" target="B">
<data key="label">Place USB drives in target locations Corporate Control: Public Spaces</data>
</edge>
<edge source="A" target="B">
<data key="label">Ensure drives are enticing with fake labels Corporate Control: USB Design</data>
</edge>
<edge source="A" target="B">
<data key="label">Incorporate autorun malware Corporate Control: Drive Payload</data>
</edge>
<edge source="A" target="B">
<data key="label">Test malware compatibility across target systems Corporate Control: Testing Environment</data>
</edge>
<edge source="B" target="C">
<data key="label">Victim curiosity leads to device connection Third Party Control: Victim System</data>
</edge>
<edge source="B" target="C">
<data key="label">Device drivers initialize Third Party Control: USB Interface</data>
</edge>
<edge source="B" target="C">
<data key="label">Malicious code starts loading automatically Third Party Control: OS Autorun</data>
</edge>
<edge source="B" target="C">
<data key="label">Limit detection by using obfuscated files Corporate Control: Drive Design</data>
</edge>
<edge source="C" target="D">
<data key="label">Malware spreads to the victim machine Third Party Control: Victim OS</data>
</edge>
<edge source="C" target="D">
<data key="label">Establish a foothold by creating backdoors Third Party Control: Malware Payload</data>
</edge>
<edge source="C" target="D">
<data key="label">Bypasses endpoint detection tools Corporate Control: Antivirus Evasion</data>
</edge>
<edge source="C" target="D">
<data key="label">Log and monitor victim device behavior Corporate Control: Malware Logging</data>
</edge>
<edge source="D" target="E">
<data key="label">Payload executes successfully Third Party Control: Victim OS</data>
</edge>
<edge source="D" target="E">
<data key="label">Persistence mechanisms are prepared Third Party Control: Backdoor Installation</data>
</edge>
<edge source="D" target="E">
<data key="label">Initial access confirmed Corporate Control: Command and Control Link</data>
</edge>
<edge source="D" target="E">
<data key="label">Monitor victim network activity Corporate Control: Threat Analysis</data>
</edge>
</graph>
</graphml>
