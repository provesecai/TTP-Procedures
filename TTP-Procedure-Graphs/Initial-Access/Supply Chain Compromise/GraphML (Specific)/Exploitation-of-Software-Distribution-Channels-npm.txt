<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">
<graph id="Exploitation_of_Software_Distribution_Channnels_npm" edgedefault="directed">
<!--  Nodes  -->
<node id="A">
<data key="label">Compromise npm Distribution Channel</data>
</node>
<node id="B">
<data key="label">Inject Malicious Code into Packages</data>
</node>
<node id="C">
<data key="label">Distribute Infected Packages to Developers</data>
</node>
<node id="D">
<data key="label">Developers Deploy Compromised Code</data>
</node>
<node id="E">
<data key="label">Initial Access Achieved</data>
</node>
<!--  Edges with Conditions/Weaknesses  -->
<edge source="A" target="B">
<data key="label">Gain unauthorized access to npm accounts Corporate Control: npm Accounts</data>
</edge>
<edge source="A" target="B">
<data key="label">Inject obfuscated malicious code into package scripts Corporate Control: Package Codebase</data>
</edge>
<edge source="A" target="B">
<data key="label">Ensure changes evade package checks Corporate Control: Code Validation</data>
</edge>
<edge source="A" target="B">
<data key="label">Monitor package downloads for targeted victims Corporate Control: Download Analytics</data>
</edge>
<edge source="B" target="C">
<data key="label">Publish infected packages on npm registry Corporate Control: Registry Hosting</data>
</edge>
<edge source="B" target="C">
<data key="label">Disguise changes with legitimate updates Corporate Control: Update Logs</data>
</edge>
<edge source="B" target="C">
<data key="label">Target widely used dependencies Corporate Control: Dependency Libraries</data>
</edge>
<edge source="B" target="C">
<data key="label">Ensure backward compatibility to evade detection Corporate Control: Versioning System</data>
</edge>
<edge source="C" target="D">
<data key="label">Developers integrate infected packages into projects Third Party Control: Development Pipelines</data>
</edge>
<edge source="C" target="D">
<data key="label">Malicious code activates during application runtime Third Party Control: Build Process</data>
</edge>
<edge source="C" target="D">
<data key="label">Monitor unusual activity in dependent projects Corporate Control: Dependency Tracking</data>
</edge>
<edge source="C" target="D">
<data key="label">Investigate unexpected dependency behavior Corporate Control: Developer Alerts</data>
</edge>
<edge source="D" target="E">
<data key="label">Attackers establish access via malicious runtime execution Third Party Control: Application Environment</data>
</edge>
<edge source="D" target="E">
<data key="label">Initial access achieved for further exploitation Third Party Control: Compromised Applications</data>
</edge>
<edge source="D" target="E">
<data key="label">Investigate anomalies in npm registry activity Corporate Control: Threat Detection</data>
</edge>
<edge source="D" target="E">
<data key="label">Enhance dependency management workflows Corporate Control: Package Auditing</data>
</edge>
</graph>
</graphml>
