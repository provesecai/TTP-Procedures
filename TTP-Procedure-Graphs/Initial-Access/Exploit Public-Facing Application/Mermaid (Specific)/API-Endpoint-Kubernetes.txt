graph TD;
    A[Identify Exposed Kubernetes API Server]
    B[Craft Malicious API Request]
    C[Send Request to API Server]
    D[Exploit API Vulnerability]
    E[Initial Access Achieved]

    A -->|"Scan for publicly accessible Kubernetes APIs Corporate Control: API Discovery"| B
    A -->|"Focus on endpoints lacking proper authentication Corporate Control: Authentication Gaps"| B
    A -->|"Use tools to identify potential misconfigurations Third Party Control: Scanning Tools"| B
    A -->|"Analyze Kubernetes API docs for potential flaws Corporate Control: Documentation Analysis"| B
    B -->|"Craft API requests to exploit misconfigured permissions Corporate Control: Permission Management"| C
    B -->|"Include payloads targeting specific cluster resources Corporate Control: Cluster Resources"| C
    B -->|"Test crafted requests on isolated Kubernetes clusters Corporate Control: Test Environments"| C
    B -->|"Refine payloads to bypass security measures Corporate Control: Security Evasion"| C
    C -->|"Send crafted request to exposed API endpoint Corporate Control: API Gateway"| D
    C -->|"Monitor responses to detect vulnerabilities Corporate Control: Response Monitoring"| D
    C -->|"Confirm successful exploitation via API logs Corporate Control: API Logs"| D
    C -->|"Test access scope to identify valuable resources Corporate Control: Resource Discovery"| D
    D -->|"Establish access to Kubernetes cluster Corporate Control: Cluster Access"| E
    D -->|"Gain control over resources for further exploitation Corporate Control: Resource Control"| E
    D -->|"Ensure persistence within cluster components Corporate Control: Persistence Mechanisms"| E
    D -->|"Monitor cluster for signs of detection Corporate Control: Cluster Monitoring"| E
