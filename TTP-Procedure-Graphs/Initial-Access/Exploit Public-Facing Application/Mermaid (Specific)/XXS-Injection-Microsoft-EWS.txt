graph TD;
    A[Identify XSS Vulnerability in EWS]
    B[Craft Malicious JavaScript Payload]
    C[Inject Payload into Vulnerable Input Field]
    D[Victim Triggers Payload on EWS]
    E[Initial Access Achieved]

    A -->|"Scan for vulnerable EWS instances Corporate Control: Web Application"| B
    A -->|"Focus on input fields like login forms Corporate Control: Input Validation"| B
    A -->|"Check for reflected or persistent XSS vulnerabilities Corporate Control: Application Logic"| B
    A -->|"Ensure scripts bypass initial sanitization checks Corporate Control: Input Handling"| B
    B -->|"Develop payload to steal user credentials or session tokens Corporate Control: Payload Development"| C
    B -->|"Obfuscate malicious script for evasion Third Party Control: JavaScript Obfuscation"| C
    B -->|"Test payload for compatibility with browser execution Corporate Control: Browser Testing"| C
    B -->|"Tailor payload for EWS-specific operations Corporate Control: Application Awareness"| C
    C -->|"Embed payload into EWS login or email interfaces Corporate Control: Interface Handling"| D
    C -->|"Ensure payload persistence in email or forms Corporate Control: Data Injection"| D
    C -->|"Monitor for victim interactions with payload Third Party Control: Victim Activity"| D
    D -->|"Victim triggers payload in EWS environment Third Party Control: Victim Browser"| E
    D -->|"Session tokens or credentials are stolen Corporate Control: Token Management"| E
    D -->|"Establish foothold for further compromise Corporate Control: Initial Compromise"| E
    D -->|"Monitor EWS logs for suspicious activity Corporate Control: Logging Systems"| E
