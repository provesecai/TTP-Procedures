<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">
<graph id="SSTI" edgedefault="directed">
<!-- Nodes -->
<node id="A">
<data key="label">Identify Template Injection Point</data>
</node>
<node id="B">
<data key="label">Inject Malicious Template Code</data>
</node>
<node id="C">
<data key="label">Trigger Template Execution</data>
</node>
<node id="D">
<data key="label">Gain Access to Server</data>
</node>
<node id="E">
<data key="label">Initial Access Achieved</data>
</node>
<!-- Edges -->
<edge source="A" target="B">
<data key="label">Discover template injection vulnerability Corporate Control: Web Application</data>
</edge>
<edge source="A" target="B">
<data key="label">Identify areas where user input is used in templates Corporate Control: Template Engine</data>
</edge>
<edge source="A" target="B">
<data key="label">Leverage tools to automate vulnerability discovery Third Party Control: Automated Scanners</data>
</edge>
<edge source="A" target="B">
<data key="label">Focus on web applications using templating engines Corporate Control: Application Stack</data>
</edge>
<edge source="B" target="C">
<data key="label">Craft payload with malicious template syntax Corporate Control: Exploit Development</data>
</edge>
<edge source="B" target="C">
<data key="label">Ensure payload exploits code execution capabilities Corporate Control: Code Execution</data>
</edge>
<edge source="B" target="C">
<data key="label">Obfuscate payload to evade detection Third Party Control: Obfuscation Tools</data>
</edge>
<edge source="B" target="C">
<data key="label">Inject payload into vulnerable input fields Corporate Control: Input Fields</data>
</edge>
<edge source="C" target="D">
<data key="label">Trigger execution by interacting with application Corporate Control: Application Interaction</data>
</edge>
<edge source="C" target="D">
<data key="label">Ensure payload executes with desired privileges Corporate Control: Privilege Escalation</data>
</edge>
<edge source="C" target="D">
<data key="label">Monitor responses for successful execution indicators Corporate Control: Execution Monitoring</data>
</edge>
<edge source="C" target="D">
<data key="label">Refine payload as needed for full exploitation Corporate Control: Exploit Refinement</data>
</edge>
<edge source="D" target="E">
<data key="label">Gain access to server or application data Corporate Control: Server Access</data>
</edge>
<edge source="D" target="E">
<data key="label">Establish foothold for future activities Corporate Control: Initial Compromise</data>
</edge>
<edge source="D" target="E">
<data key="label">Monitor for anomalies during exploitation Corporate Control: Anomaly Detection</data>
</edge>
<edge source="D" target="E">
<data key="label">Patch vulnerability to prevent further abuse Corporate Control: Vulnerability Patching</data>
</edge>
</graph>
</graphml>
