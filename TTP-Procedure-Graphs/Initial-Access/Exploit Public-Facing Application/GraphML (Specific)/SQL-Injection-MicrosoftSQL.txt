<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">
<graph id="SQL_Injection_Microsoft_SQL" edgedefault="directed">
<!-- Nodes -->
<node id="A">
<data key="label">Locate SQL Injection in Microsoft SQL Server</data>
</node>
<node id="B">
<data key="label">Craft Malicious Query</data>
</node>
<node id="C">
<data key="label">Deploy Query in Vulnerable Input Field</data>
</node>
<node id="D">
<data key="label">Extract Sensitive Data from SQL Server</data>
</node>
<node id="E">
<data key="label">Initial Access Achieved</data>
</node>
<!-- Edges -->
<edge source="A" target="B">
<data key="label">Identify web applications using MS SQL Server Corporate Control: Application Discovery</data>
</edge>
<edge source="A" target="B">
<data key="label">Scan for input fields vulnerable to SQL injection Corporate Control: Input Validation Testing</data>
</edge>
<edge source="A" target="B">
<data key="label">Confirm backend database as MS SQL Server Corporate Control: Database Type Detection</data>
</edge>
<edge source="A" target="B">
<data key="label">Focus on high-value targets like admin panels Corporate Control: Target Prioritization</data>
</edge>
<edge source="B" target="C">
<data key="label">Craft malicious SQL query targeting sensitive data Corporate Control: Query Crafting</data>
</edge>
<edge source="B" target="C">
<data key="label">Leverage MS SQL-specific syntax for extraction Corporate Control: Query Syntax</data>
</edge>
<edge source="B" target="C">
<data key="label">Use obfuscation techniques to evade WAF Corporate Control: Obfuscation Tools</data>
</edge>
<edge source="B" target="C">
<data key="label">Test query effectiveness in isolated environments Corporate Control: Testing Environment</data>
</edge>
<edge source="C" target="D">
<data key="label">Inject query into web application input field Corporate Control: Input Handling</data>
</edge>
<edge source="C" target="D">
<data key="label">Ensure query retrieves valid credentials Corporate Control: Credential Retrieval</data>
</edge>
<edge source="C" target="D">
<data key="label">Evade detection by mimicking legitimate queries Corporate Control: Query Stealth</data>
</edge>
<edge source="C" target="D">
<data key="label">Monitor for query success in application logs Corporate Control: Application Logs</data>
</edge>
<edge source="D" target="E">
<data key="label">Extract sensitive information like admin credentials Corporate Control: Data Extraction</data>
</edge>
<edge source="D" target="E">
<data key="label">Establish admin-level access to application Corporate Control: Admin Access</data>
</edge>
<edge source="D" target="E">
<data key="label">Use extracted data for further exploitation Corporate Control: Follow-On Exploitation</data>
</edge>
<edge source="D" target="E">
<data key="label">Patch vulnerabilities to prevent future SQL injection Corporate Control: Vulnerability Mitigation</data>
</edge>
</graph>
</graphml>
