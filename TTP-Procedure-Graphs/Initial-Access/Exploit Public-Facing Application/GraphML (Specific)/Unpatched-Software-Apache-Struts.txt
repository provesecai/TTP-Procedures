<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">
<graph id="Unpatched_Software_Apache_Struts" edgedefault="directed">
<!-- Nodes -->
<node id="A">
<data key="label">Identify Vulnerable Apache Struts Server</data>
</node>
<node id="B">
<data key="label">Craft Exploit Targeting CVE-2017-5638</data>
</node>
<node id="C">
<data key="label">Deploy Exploit to Struts Server</data>
</node>
<node id="D">
<data key="label">Trigger Remote Code Execution on Server</data>
</node>
<node id="E">
<data key="label">Initial Access Achieved</data>
</node>
<!-- Edges -->
<edge source="A" target="B">
<data key="label">Scan for Apache Struts servers with outdated versions Corporate Control: Network Scanning</data>
</edge>
<edge source="A" target="B">
<data key="label">Focus on servers with public-facing endpoints Corporate Control: Endpoint Discovery</data>
</edge>
<edge source="A" target="B">
<data key="label">Identify CVE-2017-5638 affecting Struts versions Corporate Control: Vulnerability Awareness</data>
</edge>
<edge source="A" target="B">
<data key="label">Leverage CVE database for exploit details Third Party Control: CVE Database</data>
</edge>
<edge source="B" target="C">
<data key="label">Craft exploit targeting remote code execution Corporate Control: Exploit Development</data>
</edge>
<edge source="B" target="C">
<data key="label">Include payload for initial foothold establishment Corporate Control: Payload Design</data>
</edge>
<edge source="B" target="C">
<data key="label">Test exploit on isolated Struts servers Corporate Control: Lab Testing</data>
</edge>
<edge source="B" target="C">
<data key="label">Refine exploit for reliability and stealth Corporate Control: Payload Refinement</data>
</edge>
<edge source="C" target="D">
<data key="label">Send exploit to Struts REST API endpoint Corporate Control: API Targeting</data>
</edge>
<edge source="C" target="D">
<data key="label">Monitor server logs for successful payload execution Corporate Control: Execution Monitoring</data>
</edge>
<edge source="C" target="D">
<data key="label">Adjust payload if initial attempt fails Corporate Control: Iterative Testing</data>
</edge>
<edge source="C" target="D">
<data key="label">Ensure payload bypasses defenses like WAF Corporate Control: Defense Evasion</data>
</edge>
<edge source="D" target="E">
<data key="label">Execute arbitrary code on Struts server Corporate Control: Code Execution</data>
</edge>
<edge source="D" target="E">
<data key="label">Gain admin-level access to server Corporate Control: Server Access</data>
</edge>
<edge source="D" target="E">
<data key="label">Monitor for detection attempts during exploitation Corporate Control: Anomaly Detection</data>
</edge>
<edge source="D" target="E">
<data key="label">Mitigate CVE vulnerability after exploitation Corporate Control: Security Remediation</data>
</edge>
</graph>
</graphml>
