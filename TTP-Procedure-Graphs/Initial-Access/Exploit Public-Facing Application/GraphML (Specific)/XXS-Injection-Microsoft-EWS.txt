<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">
<graph id="XSS_EWS" edgedefault="directed">
<!-- Nodes -->
<node id="A">
<data key="label">Identify XSS Vulnerability in EWS</data>
</node>
<node id="B">
<data key="label">Craft Malicious JavaScript Payload</data>
</node>
<node id="C">
<data key="label">Inject Payload into Vulnerable Input Field</data>
</node>
<node id="D">
<data key="label">Victim Triggers Payload on EWS</data>
</node>
<node id="E">
<data key="label">Initial Access Achieved</data>
</node>
<!-- Edges -->
<edge source="A" target="B">
<data key="label">Scan for vulnerable EWS instances Corporate Control: Web Application</data>
</edge>
<edge source="A" target="B">
<data key="label">Focus on input fields like login forms Corporate Control: Input Validation</data>
</edge>
<edge source="A" target="B">
<data key="label">Check for reflected or persistent XSS vulnerabilities Corporate Control: Application Logic</data>
</edge>
<edge source="A" target="B">
<data key="label">Ensure scripts bypass initial sanitization checks Corporate Control: Input Handling</data>
</edge>
<edge source="B" target="C">
<data key="label">Develop payload to steal user credentials or session tokens Corporate Control: Payload Development</data>
</edge>
<edge source="B" target="C">
<data key="label">Obfuscate malicious script for evasion Third Party Control: JavaScript Obfuscation</data>
</edge>
<edge source="B" target="C">
<data key="label">Test payload for compatibility with browser execution Corporate Control: Browser Testing</data>
</edge>
<edge source="B" target="C">
<data key="label">Tailor payload for EWS-specific operations Corporate Control: Application Awareness</data>
</edge>
<edge source="C" target="D">
<data key="label">Embed payload into EWS login or email interfaces Corporate Control: Interface Handling</data>
</edge>
<edge source="C" target="D">
<data key="label">Ensure payload persistence in email or forms Corporate Control: Data Injection</data>
</edge>
<edge source="C" target="D">
<data key="label">Monitor for victim interactions with payload Third Party Control: Victim Activity</data>
</edge>
<edge source="D" target="E">
<data key="label">Victim triggers payload in EWS environment Third Party Control: Victim Browser</data>
</edge>
<edge source="D" target="E">
<data key="label">Session tokens or credentials are stolen Corporate Control: Token Management</data>
</edge>
<edge source="D" target="E">
<data key="label">Establish foothold for further compromise Corporate Control: Initial Compromise</data>
</edge>
<edge source="D" target="E">
<data key="label">Monitor EWS logs for suspicious activity Corporate Control: Logging Systems</data>
</edge>
</graph>
</graphml>
