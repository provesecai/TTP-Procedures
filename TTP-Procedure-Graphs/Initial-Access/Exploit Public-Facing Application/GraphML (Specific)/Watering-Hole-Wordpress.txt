<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">
<graph id="Watering_Hole_WordPress" edgedefault="directed">
<!-- Nodes -->
<node id="A">
<data key="label">Compromise WordPress Site</data>
</node>
<node id="B">
<data key="label">Inject Malicious JavaScript via Plugin</data>
</node>
<node id="C">
<data key="label">Victim Visits Compromised Site</data>
</node>
<node id="D">
<data key="label">Malicious Script Executes in Victim's Browser</data>
</node>
<node id="E">
<data key="label">Initial Access Achieved</data>
</node>
<!-- Edges -->
<edge source="A" target="B">
<data key="label">Identify a popular WordPress site Corporate Control: WordPress Hosting</data>
</edge>
<edge source="A" target="B">
<data key="label">Exploit outdated plugin vulnerabilities Third Party Control: Plugin Software</data>
</edge>
<edge source="A" target="B">
<data key="label">Gain admin panel access through brute force or phishing Corporate Control: Admin Panel</data>
</edge>
<edge source="A" target="B">
<data key="label">Avoid detection by obfuscating access Corporate Control: Security Logs</data>
</edge>
<edge source="B" target="C">
<data key="label">Inject obfuscated malicious script into plugin files Corporate Control: Website Codebase</data>
</edge>
<edge source="B" target="C">
<data key="label">Configure script to trigger on specific user interactions Corporate Control: Injected Script</data>
</edge>
<edge source="B" target="C">
<data key="label">Ensure persistence by modifying plugin files Corporate Control: Plugin Files</data>
</edge>
<edge source="B" target="C">
<data key="label">Evade detection with file hash changes Corporate Control: CMS Monitoring</data>
</edge>
<edge source="C" target="D">
<data key="label">Victim unknowingly triggers script Third Party Control: Victim Browser</data>
</edge>
<edge source="C" target="D">
<data key="label">Malicious payload is delivered to the victim Corporate Control: Payload Transfer</data>
</edge>
<edge source="C" target="D">
<data key="label">Monitor traffic for successful payload execution Corporate Control: Traffic Logs</data>
</edge>
<edge source="D" target="E">
<data key="label">Execute payload to establish connection with attacker server Third Party Control: Victim Machine</data>
</edge>
<edge source="D" target="E">
<data key="label">Initial access to victim system achieved Corporate Control: Compromised System</data>
</edge>
<edge source="D" target="E">
<data key="label">Monitor for signs of detection Corporate Control: Security Monitoring</data>
</edge>
</graph>
</graphml>
