<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">
<graph id="LFI_Apache" edgedefault="directed">
<!-- Nodes -->
<node id="A">
<data key="label">Identify LFI Vulnerability in Apache</data>
</node>
<node id="B">
<data key="label">Inject Malicious File Path</data>
</node>
<node id="C">
<data key="label">Apache Server Executes Local File</data>
</node>
<node id="D">
<data key="label">File Delivers Malicious Payload</data>
</node>
<node id="E">
<data key="label">Initial Access Achieved</data>
</node>
<!-- Edges -->
<edge source="A" target="B">
<data key="label">Scan for endpoints accepting file path input Corporate Control: Apache Server</data>
</edge>
<edge source="A" target="B">
<data key="label">Identify unvalidated file inclusion functionality Corporate Control: File Inclusion Logic</data>
</edge>
<edge source="A" target="B">
<data key="label">Target directory traversal vulnerabilities Corporate Control: Directory Traversal</data>
</edge>
<edge source="A" target="B">
<data key="label">Focus on error-prone configurations in httpd.conf Corporate Control: Apache Configuration</data>
</edge>
<edge source="B" target="C">
<data key="label">Inject paths to sensitive files like /etc/passwd Corporate Control: Input Handling</data>
</edge>
<edge source="B" target="C">
<data key="label">Use traversal techniques to escape directories Corporate Control: Directory Traversal</data>
</edge>
<edge source="B" target="C">
<data key="label">Test injected paths in isolated environments Corporate Control: Test Systems</data>
</edge>
<edge source="B" target="C">
<data key="label">Ensure payload bypasses application filters Corporate Control: Input Filters</data>
</edge>
<edge source="C" target="D">
<data key="label">Trigger execution of local file via HTTP requests Corporate Control: File Execution</data>
</edge>
<edge source="C" target="D">
<data key="label">Monitor server responses for successful exploitation Corporate Control: Server Logs</data>
</edge>
<edge source="C" target="D">
<data key="label">Ensure payload targets sensitive server files Corporate Control: File Targeting</data>
</edge>
<edge source="C" target="D">
<data key="label">Refine payload to evade detection Corporate Control: Detection Avoidance</data>
</edge>
<edge source="D" target="E">
<data key="label">Execute commands or establish foothold on server Corporate Control: Command Execution</data>
</edge>
<edge source="D" target="E">
<data key="label">Initial access to Apache server achieved Corporate Control: Server Compromise</data>
</edge>
<edge source="D" target="E">
<data key="label">Monitor network traffic for unusual patterns Corporate Control: Network Monitoring</data>
</edge>
<edge source="D" target="E">
<data key="label">Patch LFI vulnerability to prevent re-exploitation Corporate Control: Security Updates</data>
</edge>
</graph>
</graphml>
