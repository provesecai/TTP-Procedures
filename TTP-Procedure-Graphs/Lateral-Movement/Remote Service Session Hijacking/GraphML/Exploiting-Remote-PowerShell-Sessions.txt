<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">
<graph id="Exploiting-Remote-PowerShell-Sessions" edgedefault="directed">
<!--  Nodes  -->
<node id="A">
<data key="label">Enumerate Active Remote PowerShell Sessions</data>
</node>
<node id="B">
<data key="label">Hijack Established PowerShell Sessions</data>
</node>
<node id="C">
<data key="label">Execute Commands with Hijacked Session</data>
</node>
<node id="D">
<data key="label">Erase Evidence and Maintain Persistence</data>
</node>
<node id="E">
<data key="label">Lateral Movement Achieved</data>
</node>
<!--  Edges with Conditions/Weaknesses -->
<edge source="A" target="B">
<data key="label">List active PowerShell Remoting sessions using 'Get-PSSession'. Corporate Control: PowerShell Logging</data>
</edge>
<edge source="A" target="B">
<data key="label">Monitor for unauthorized PowerShell activity on sensitive hosts. Third Party: Threat Intelligence Feeds</data>
</edge>
<edge source="A" target="B">
<data key="label">Identify misconfigured PowerShell Remoting policies allowing unrestricted access. Corporate Control: Group Policy Enforcement</data>
</edge>
<edge source="A" target="B">
<data key="label">Monitor network traffic for PowerShell session authentication. Corporate Control: Security Information and Event Management (SIEM)</data>
</edge>
<edge source="B" target="C">
<data key="label">Use 'Enter-PSSession' to take control of an established PowerShell session. Corporate Control: Endpoint Detection and Response (EDR)</data>
</edge>
<edge source="B" target="C">
<data key="label">Exploit misconfigured Just Enough Administration (JEA) to escalate privileges. Third Party: Security Audit Services</data>
</edge>
<edge source="B" target="C">
<data key="label">Modify registry settings to allow persistent session hijacking. Corporate Control: Privileged Access Management (PAM)</data>
</edge>
<edge source="B" target="C">
<data key="label">Capture session authentication tokens for later reuse. Corporate Control: Identity and Access Management (IAM)</data>
</edge>
<edge source="C" target="D">
<data key="label">Use hijacked session to move laterally via network commands. Corporate Control: Network Access Controls</data>
</edge>
<edge source="C" target="D">
<data key="label">Modify PowerShell logs to erase evidence of session hijacking. Third Party: Digital Forensics Services</data>
</edge>
<edge source="C" target="D">
<data key="label">Prevent logging by disabling PowerShell ScriptBlock Logging. Corporate Control: Application Whitelisting</data>
</edge>
<edge source="C" target="D">
<data key="label">Deploy scheduled tasks via PowerShell to maintain persistence. Corporate Control: Threat Intelligence Monitoring</data>
</edge>
<edge source="D" target="E">
<data key="label">Delete PowerShell session history and connection logs. Corporate Control: Log Integrity Monitoring</data>
</edge>
<edge source="D" target="E">
<data key="label">Modify timestamps of hijacked PowerShell commands to evade forensic detection. Third Party: Digital Forensics Services</data>
</edge>
<edge source="D" target="E">
<data key="label">Cover tracks by clearing PowerShell execution history. Corporate Control: Security Information and Event Management (SIEM)</data>
</edge>
<edge source="D" target="E">
<data key="label">Confirm successful lateral movement by accessing additional remote systems. Corporate Control: Lateral Movement Detection</data>
</edge>
</graph>
</graphml>
