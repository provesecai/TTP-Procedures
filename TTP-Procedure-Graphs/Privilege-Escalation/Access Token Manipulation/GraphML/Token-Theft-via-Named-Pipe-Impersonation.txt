<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">
<graph id="Token-Theft-via-Named-Pipe-Impersonation" edgedefault="directed">
<!--  Nodes  -->
<node id="A">
<data key="label">Identify Named Pipes Used by Privileged Processes</data>
</node>
<node id="B">
<data key="label">Create Rogue Named Pipe to Capture SYSTEM Token</data>
</node>
<node id="C">
<data key="label">Validate SYSTEM Token Impersonation</data>
</node>
<node id="D">
<data key="label">Prevent Detection of Named Pipe Token Theft</data>
</node>
<node id="E">
<data key="label">SYSTEM Privileges Achieved via Token Theft</data>
</node>
<!--  Edges with Conditions -->
<edge source="A" target="B">
<data key="label">Enumerate available named pipes associated with SYSTEM processes Corporate Control: Windows Object Manager</data>
</edge>
<edge source="A" target="B">
<data key="label">Identify named pipes vulnerable to impersonation Corporate Control: Windows Security Descriptors</data>
</edge>
<edge source="A" target="B">
<data key="label">Determine feasibility of redirecting named pipe requests Corporate Control: Windows Inter-Process Communication (IPC)</data>
</edge>
<edge source="A" target="B">
<data key="label">Monitor for unauthorized named pipe access attempts Corporate Control: SIEM, Windows Security Logs</data>
</edge>
<edge source="B" target="C">
<data key="label">Intercept privileged process authentication through rogue named pipe Corporate Control: Windows Impersonation APIs</data>
</edge>
<edge source="B" target="C">
<data key="label">Extract SYSTEM token from impersonated process Corporate Control: Windows Authentication Mechanisms</data>
</edge>
<edge source="B" target="C">
<data key="label">Ensure SYSTEM privileges persist across token reuse Corporate Control: Windows Security Token Management</data>
</edge>
<edge source="B" target="C">
<data key="label">Monitor for unauthorized named pipe impersonation attempts Corporate Control: Endpoint Detection and Response (EDR)</data>
</edge>
<edge source="C" target="D">
<data key="label">Verify SYSTEM privileges by executing privileged commands Corporate Control: Privileged Process Execution Validation</data>
</edge>
<edge source="C" target="D">
<data key="label">Modify security logs to erase traces of token impersonation Corporate Control: Log Scrubbing, Security Event Logs</data>
</edge>
<edge source="C" target="D">
<data key="label">Ensure persistence by modifying named pipe access policies Corporate Control: Windows Security Group Policies</data>
</edge>
<edge source="C" target="D">
<data key="label">Monitor for unauthorized SYSTEM token usage Corporate Control: SIEM, Threat Intelligence Feeds</data>
</edge>
<edge source="D" target="E">
<data key="label">Deploy multiple token impersonation techniques for redundancy Corporate Control: Alternate Named Pipe Exploitation Methods</data>
</edge>
<edge source="D" target="E">
<data key="label">Ensure continued SYSTEM access by modifying security privileges Corporate Control: Windows Kernel Security</data>
</edge>
<edge source="D" target="E">
<data key="label">SOC continuously monitors for unauthorized named pipe impersonation Corporate Control: Security Operations Center (SOC)</data>
</edge>
</graph>
</graphml>
