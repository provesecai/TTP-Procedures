<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">
<graph id="Exploiting_Safari_Extension_Syncing" edgedefault="directed">
<!--  Nodes  -->
<node id="A">
<data key="label">Identify Safari Extension Syncing Mechanism</data>
</node>
<node id="B">
<data key="label">Deploy Malicious Safari Extension via iCloud Sync</data>
</node>
<node id="C">
<data key="label">Monitor and Maintain Persistence via Extension Sync</data>
</node>
<node id="D">
<data key="label">Conceal Malicious Safari Extension</data>
</node>
<node id="E">
<data key="label">Persistence Achieved via Safari Extension Syncing</data>
</node>
<!--  Edges with Conditions/Weaknesses  -->
<edge source="A" target="B">
<data key="label">Enumerate installed Safari extensions in ~/Library/Safari/Extensions Corporate Control: macOS File System</data>
</edge>
<edge source="A" target="B">
<data key="label">Identify users with iCloud Safari sync enabled Corporate Control: iCloud System Preferences</data>
</edge>
<edge source="A" target="B">
<data key="label">Prepare malicious Safari extension package for deployment Corporate Control: Internal macOS File Repositories</data>
</edge>
<edge source="A" target="B">
<data key="label">Analyze logging mechanisms for extension synchronization Corporate Control: Unified Logs</data>
</edge>
<edge source="B" target="C">
<data key="label">Deploy malicious extension to ~/Library/Safari/Extensions Corporate Control: Safari Extension Management</data>
</edge>
<edge source="B" target="C">
<data key="label">Ensure automatic syncing of extension to all iCloud-connected devices Corporate Control: iCloud Sync Service</data>
</edge>
<edge source="B" target="C">
<data key="label">Validate execution of extension scripts on browser startup Corporate Control: Safari Web Extensions API</data>
</edge>
<edge source="B" target="C">
<data key="label">Apply obfuscation techniques (hidden permissions, disguised manifest) Corporate Control: Safari Extension Store</data>
</edge>
<edge source="C" target="D">
<data key="label">Monitor extension syncing and execution Corporate Control: macOS Security Logs</data>
</edge>
<edge source="C" target="D">
<data key="label">Ensure persistence across Safari updates Corporate Control: Safari Auto-Update Mechanism</data>
</edge>
<edge source="C" target="D">
<data key="label">Validate stealth against macOS security monitoring Corporate Control: macOS Gatekeeper</data>
</edge>
<edge source="C" target="D">
<data key="label">Modify extension metadata periodically to evade detection Corporate Control: Safari Configuration Files</data>
</edge>
<edge source="D" target="E">
<data key="label">Remove logs of unauthorized extension deployment Corporate Control: Unified Logs</data>
</edge>
<edge source="D" target="E">
<data key="label">Obfuscate extension metadata and iCloud sync settings Corporate Control: macOS System Preferences</data>
</edge>
<edge source="D" target="E">
<data key="label">Blend malicious Safari extension with legitimate ones Corporate Control: Safari Extensions Store</data>
</edge>
<edge source="D" target="E">
<data key="label">Continuously monitor Safari extension syncing Corporate Control: Security Operations Center</data>
</edge>
</graph>
</graphml>
