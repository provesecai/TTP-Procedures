<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">
<graph id="ShellcodeInjectionForPersistence" edgedefault="directed">
<!--  Nodes  -->
<node id="A">
<data key="label">Prepare to Inject Shellcode via Event Trigger</data>
</node>
<node id="B">
<data key="label">Inject Shellcode via Event Subscription</data>
</node>
<node id="C">
<data key="label">Ensure Shellcode Injection Persistence</data>
</node>
<node id="D">
<data key="label">Conceal Shellcode Injection Mechanism</data>
</node>
<node id="E">
<data key="label">Persistence Achieved via Shellcode Injection</data>
</node>
<!--  Edges with Conditions/Weaknesses  -->
<edge source="A" target="B">
<data key="label">Gain administrative access to configure event subscriptions Corporate Control: Admin Rights, Event Subscription Tools</data>
</edge>
<edge source="A" target="B">
<data key="label">Identify events that trigger the injection of shellcode Corporate Control: Event Logs, Event Subscription Management</data>
</edge>
<edge source="A" target="B">
<data key="label">Prepare and inject shellcode to be executed on event trigger Corporate Control: PowerShell, Scripting Tools</data>
</edge>
<edge source="A" target="B">
<data key="label">Monitor system for event triggers Corporate Control: Event Viewer, SIEM Tools</data>
</edge>
<edge source="B" target="C">
<data key="label">Create event subscription to trigger shellcode execution Corporate Control: Event Subscription Manager</data>
</edge>
<edge source="B" target="C">
<data key="label">Set event to trigger execution of injected shellcode Corporate Control: Event Logs, Task Scheduler</data>
</edge>
<edge source="B" target="C">
<data key="label">Ensure shellcode persists after system reboot Corporate Control: System Boot Configuration, Event Log Integration</data>
</edge>
<edge source="B" target="C">
<data key="label">Apply obfuscation techniques to hide shellcode injection Corporate Control: Log Management, Event Log Filtering</data>
</edge>
<edge source="C" target="D">
<data key="label">Monitor shellcode execution for reliability Corporate Control: Event Logs, SIEM Systems</data>
</edge>
<edge source="C" target="D">
<data key="label">Ensure shellcode persists across reboots Corporate Control: System Reconfiguration, Boot Process Settings</data>
</edge>
<edge source="C" target="D">
<data key="label">Reapply shellcode injection if disrupted Corporate Control: Script Management, System Recovery</data>
</edge>
<edge source="D" target="E">
<data key="label">Conceal event-triggered shellcode execution from user Corporate Control: Event Viewer, Task Manager</data>
</edge>
<edge source="D" target="E">
<data key="label">Blend shellcode execution with legitimate system events Corporate Control: System Process Management, Log Configuration</data>
</edge>
<edge source="D" target="E">
<data key="label">Ensure undetectable shellcode injection by security tools Corporate Control: Antivirus, EDR Tools</data>
</edge>
<edge source="D" target="E">
<data key="label">Monitor shellcode injection for stealth Corporate Control: SIEM, Security Operations Center</data>
</edge>
</graph>
</graphml>
