<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">
<graph id="Windows-Credential-Manager-Data-Manipulation" edgedefault="directed">
<!--  Nodes  -->
<node id="A">
<data key="label">Analyze Windows Credential Manager Storage</data>
</node>
<node id="B">
<data key="label">Inject Malicious Credentials into Credential Manager</data>
</node>
<node id="C">
<data key="label">Maintain Persistent Access Using Stored Credentials</data>
</node>
<node id="D">
<data key="label">Prevent Credential Expiry and Conceal Activity</data>
</node>
<node id="E">
<data key="label">Persistence Achieved via Credential Manager Tampering</data>
</node>
<!--  Edges with Conditions/Weaknesses  -->
<edge source="A" target="B">
<data key="label">Identify where Windows stores credentials Corporate Control: Windows Credential Manager</data>
</edge>
<edge source="A" target="B">
<data key="label">Analyze secure storage mechanisms Corporate Control: LSASS, Encryption APIs</data>
</edge>
<edge source="A" target="B">
<data key="label">Determine method for injecting rogue credentials Corporate Control: Windows Security Policies</data>
</edge>
<edge source="A" target="B">
<data key="label">Monitor credential manager logs for anomalies Corporate Control: SIEM, Security Event Logs</data>
</edge>
<edge source="B" target="C">
<data key="label">Insert unauthorized credentials for persistent authentication Corporate Control: Credential Storage, Windows Vault</data>
</edge>
<edge source="B" target="C">
<data key="label">Modify authentication mechanisms to use injected credentials Corporate Control: Windows Logon Process</data>
</edge>
<edge source="B" target="C">
<data key="label">Ensure credential persistence across system reboots Corporate Control: Registry Persistence, Group Policy</data>
</edge>
<edge source="B" target="C">
<data key="label">Monitor for credential tampering Corporate Control: Endpoint Detection and Response (EDR)</data>
</edge>
<edge source="C" target="D">
<data key="label">Use modified credentials to maintain system access Corporate Control: Windows Authentication Modules</data>
</edge>
<edge source="C" target="D">
<data key="label">Prevent credential refresh from removing injected entries Corporate Control: Windows Policy Enforcement</data>
</edge>
<edge source="C" target="D">
<data key="label">Ensure persistence through security updates Corporate Control: Patch Management, Security Policies</data>
</edge>
<edge source="C" target="D">
<data key="label">Monitor authentication activity for anomalies Corporate Control: SOC, Threat Analytics</data>
</edge>
<edge source="D" target="E">
<data key="label">Encrypt credential data to evade detection Corporate Control: Credential Encryption, Secure Storage</data>
</edge>
<edge source="D" target="E">
<data key="label">Modify logs to remove traces of credential injection Corporate Control: Windows Event Logs, Security Analytics</data>
</edge>
<edge source="D" target="E">
<data key="label">Deploy multiple credential injection techniques Corporate Control: Alternate Authentication Hooks</data>
</edge>
<edge source="D" target="E">
<data key="label">SOC monitors stored credentials for unauthorized modifications Corporate Control: SIEM, Threat Hunting</data>
</edge>
</graph>
</graphml>
