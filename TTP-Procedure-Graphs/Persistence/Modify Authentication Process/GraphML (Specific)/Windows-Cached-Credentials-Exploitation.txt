<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">
<graph id="Windows-Cached-Credentials-Exploitation" edgedefault="directed">
<!--  Nodes  -->
<node id="A">
<data key="label">Analyze Windows Cached Credentials Storage</data>
</node>
<node id="B">
<data key="label">Modify Cached Credentials for Persistent Access</data>
</node>
<node id="C">
<data key="label">Prevent Credential Expiry to Maintain Access</data>
</node>
<node id="D">
<data key="label">Evade Detection and Maintain Cached Logins</data>
</node>
<node id="E">
<data key="label">Persistence Achieved via Cached Credentials Manipulation</data>
</node>
<!--  Edges with Conditions/Weaknesses  -->
<edge source="A" target="B">
<data key="label">Identify how Windows caches credentials Corporate Control: Local Security Authority (LSA)</data>
</edge>
<edge source="A" target="B">
<data key="label">Determine best injection method Corporate Control: Windows Registry, LSASS Process</data>
</edge>
<edge source="A" target="B">
<data key="label">Analyze legitimate cached authentication processes Corporate Control: Windows Credential Manager</data>
</edge>
<edge source="A" target="B">
<data key="label">Monitor credential caching logs for anomalies Corporate Control: SIEM, Security Event Logs</data>
</edge>
<edge source="B" target="C">
<data key="label">Inject rogue credentials into cache Corporate Control: Windows Security Subsystem</data>
</edge>
<edge source="B" target="C">
<data key="label">Modify credential storage policy Corporate Control: Windows Registry, System Policies</data>
</edge>
<edge source="B" target="C">
<data key="label">Ensure persistence across logouts Corporate Control: Auto-Login, Credential Retention Mechanisms</data>
</edge>
<edge source="B" target="C">
<data key="label">Monitor cache modifications for anomalies Corporate Control: Threat Intelligence, Endpoint Security</data>
</edge>
<edge source="C" target="D">
<data key="label">Use modified credentials to bypass authentication Corporate Control: Windows Authentication Mechanisms</data>
</edge>
<edge source="C" target="D">
<data key="label">Prevent credential refresh from removing rogue entries Corporate Control: System Policy Manipulation</data>
</edge>
<edge source="C" target="D">
<data key="label">Ensure changes persist across system updates Corporate Control: Patch Management, Security Policies</data>
</edge>
<edge source="C" target="D">
<data key="label">Monitor unauthorized login attempts Corporate Control: SOC, Threat Analytics</data>
</edge>
<edge source="D" target="E">
<data key="label">Encrypt cached credentials to evade detection Corporate Control: Code Obfuscation, Security Hardening</data>
</edge>
<edge source="D" target="E">
<data key="label">Modify security logs to remove traces of credential tampering Corporate Control: Windows Event Logs, Log Scrubbing</data>
</edge>
<edge source="D" target="E">
<data key="label">Deploy multiple credential injection techniques Corporate Control: Alternate Authentication Hooks</data>
</edge>
<edge source="D" target="E">
<data key="label">SOC monitors authentication cache for unauthorized modifications Corporate Control: SIEM, Threat Hunting</data>
</edge>
</graph>
</graphml>
