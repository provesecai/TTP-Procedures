<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">
<graph id="Java-Servlet-Filter-Injection-in-Web-Applications" edgedefault="directed">
<!--  Nodes  -->
<node id="A">
<data key="label">Identify Java Servlet Web Applications</data>
</node>
<node id="B">
<data key="label">Inject Malicious Servlet Filter</data>
</node>
<node id="C">
<data key="label">Ensure Code Execution on Every HTTP Request</data>
</node>
<node id="D">
<data key="label">Prevent Detection of Malicious Filter</data>
</node>
<node id="E">
<data key="label">Persistence Achieved via Java Servlet Filter Injection</data>
</node>
<!--  Edges with Conditions  -->
<edge source="A" target="B">
<data key="label">Analyze Java web application (Spring Boot, Tomcat) Corporate Control: Application Security Policies</data>
</edge>
<edge source="A" target="B">
<data key="label">Identify servlet filters in web.xml or annotations Corporate Control: Java EE Web Configuration</data>
</edge>
<edge source="A" target="B">
<data key="label">Determine access points for modifying servlet filters Corporate Control: Application File Permissions</data>
</edge>
<edge source="A" target="B">
<data key="label">Monitor for unauthorized changes to servlet filters Corporate Control: File Integrity Monitoring (FIM), SIEM</data>
</edge>
<edge source="B" target="C">
<data key="label">Inject malicious filter into web.xml or Java annotations Corporate Control: Web Application Configuration</data>
</edge>
<edge source="B" target="C">
<data key="label">Modify request and response flow to execute backdoor code Corporate Control: Java Servlet API</data>
</edge>
<edge source="B" target="C">
<data key="label">Ensure filter loads automatically on web server startup Corporate Control: Application Initialization Settings</data>
</edge>
<edge source="B" target="C">
<data key="label">Monitor servlet execution anomalies Corporate Control: Application Performance Monitoring (APM)</data>
</edge>
<edge source="C" target="D">
<data key="label">Modify response data dynamically to evade detection Corporate Control: Java Reflection, Code Obfuscation</data>
</edge>
<edge source="C" target="D">
<data key="label">Ensure filter remains active across application updates Corporate Control: Patch Management Policies</data>
</edge>
<edge source="C" target="D">
<data key="label">Restrict access to web.xml to prevent filter removal Corporate Control: Application File Access Controls</data>
</edge>
<edge source="C" target="D">
<data key="label">Monitor web application logs for unexpected behavior Corporate Control: SIEM, Threat Intelligence</data>
</edge>
<edge source="D" target="E">
<data key="label">Encrypt Java payload to evade signature detection Corporate Control: Java Class Encryption</data>
</edge>
<edge source="D" target="E">
<data key="label">Modify logs to remove evidence of filter execution Corporate Control: Log Scrubbing, SIEM</data>
</edge>
<edge source="D" target="E">
<data key="label">Deploy multiple servlet filters across applications Corporate Control: Multiple Web Application Instances</data>
</edge>
<edge source="D" target="E">
<data key="label">SOC continuously monitors Java web application behavior Corporate Control: Security Operations Center (SOC)</data>
</edge>
</graph>
</graphml>
