<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">
<graph id="Modifying_Windows_Service_Executables" edgedefault="directed">
<!--  Nodes  -->
<node id="A">
<data key="label">Identify Target Windows Service Executables</data>
</node>
<node id="B">
<data key="label">Modify Service Executable to Execute Malicious Code</data>
</node>
<node id="C">
<data key="label">Monitor and Maintain Persistence via Service Execution</data>
</node>
<node id="D">
<data key="label">Conceal Service Executable Modifications</data>
</node>
<node id="E">
<data key="label">Persistence Achieved via Windows Service Modification</data>
</node>
<!--  Edges with Conditions/Weaknesses  -->
<edge source="A" target="B">
<data key="label">Enumerate installed Windows services and their executables Corporate Control: Windows Service Manager</data>
</edge>
<edge source="A" target="B">
<data key="label">Identify writable service executables based on user permissions Corporate Control: Active Directory Policies</data>
</edge>
<edge source="A" target="B">
<data key="label">Analyze system logs for service execution tracking Corporate Control: Windows Event Viewer</data>
</edge>
<edge source="A" target="B">
<data key="label">Prepare malicious executable replacement Corporate Control: Internal File Repositories</data>
</edge>
<edge source="B" target="C">
<data key="label">Replace legitimate service binary with attacker-modified executable Corporate Control: Windows File System</data>
</edge>
<edge source="B" target="C">
<data key="label">Ensure the modified service is set to auto-start on boot Corporate Control: Service Configuration</data>
</edge>
<edge source="B" target="C">
<data key="label">Validate execution by monitoring service behavior Corporate Control: Windows Service Logs</data>
</edge>
<edge source="B" target="C">
<data key="label">Apply obfuscation techniques (file version spoofing, process injection) Corporate Control: File System Metadata</data>
</edge>
<edge source="C" target="D">
<data key="label">Monitor service execution for anomalies Corporate Control: SIEM Systems</data>
</edge>
<edge source="C" target="D">
<data key="label">Ensure persistence across system updates Corporate Control: Windows Update Policies</data>
</edge>
<edge source="C" target="D">
<data key="label">Validate stealth against security tools Corporate Control: Windows Defender, AMSI</data>
</edge>
<edge source="C" target="D">
<data key="label">Modify file attributes periodically to evade detection Corporate Control: File Integrity Monitoring</data>
</edge>
<edge source="D" target="E">
<data key="label">Remove logs of unauthorized service binary modification Corporate Control: Event Viewer</data>
</edge>
<edge source="D" target="E">
<data key="label">Obfuscate modified service binary metadata Corporate Control: File System Attributes</data>
</edge>
<edge source="D" target="E">
<data key="label">Blend malicious service modifications with legitimate configurations Corporate Control: Windows Service Registry</data>
</edge>
<edge source="D" target="E">
<data key="label">Continuously monitor modified service execution Corporate Control: Security Operations Center</data>
</edge>
</graph>
</graphml>
