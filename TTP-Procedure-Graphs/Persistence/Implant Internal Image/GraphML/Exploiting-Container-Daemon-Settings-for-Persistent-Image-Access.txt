<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">
<graph id="ExploitingContainerDaemonForPersistence" edgedefault="directed">
<!--  Nodes  -->
<node id="A">
<data key="label">Prepare to Exploit Container Daemon Settings for Persistence</data>
</node>
<node id="B">
<data key="label">Modify Container Daemon for Persistent Execution</data>
</node>
<node id="C">
<data key="label">Ensure Container Daemon Persistence</data>
</node>
<node id="D">
<data key="label">Conceal Malicious Container Daemon Modifications</data>
</node>
<node id="E">
<data key="label">Persistence Achieved via Exploited Daemon</data>
</node>
<!--  Edges with Conditions/Weaknesses  -->
<edge source="A" target="B">
<data key="label">Gain administrative access to container daemon configuration Corporate Control: Docker Daemon, Admin Rights</data>
</edge>
<edge source="A" target="B">
<data key="label">Identify vulnerable container daemon settings for exploitation Corporate Control: Docker Configuration, Event Logs</data>
</edge>
<edge source="A" target="B">
<data key="label">Modify daemon configuration to allow malicious execution Corporate Control: Docker Daemon Configuration, System Calls</data>
</edge>
<edge source="A" target="B">
<data key="label">Monitor container daemon logs for exploitation opportunities Corporate Control: Docker Logs, Event Logs</data>
</edge>
<edge source="B" target="C">
<data key="label">Hijack container daemon process for remote execution Corporate Control: Docker Daemon, Remote Execution</data>
</edge>
<edge source="B" target="C">
<data key="label">Ensure daemon persists on system restart Corporate Control: Docker Restart Policies, Container Auto-Start</data>
</edge>
<edge source="B" target="C">
<data key="label">Ensure malicious payload executes when container starts Corporate Control: Container Settings, Docker Run Command</data>
</edge>
<edge source="B" target="C">
<data key="label">Apply obfuscation to daemon logs to avoid detection Corporate Control: Docker Logs, Log Filtering</data>
</edge>
<edge source="C" target="D">
<data key="label">Monitor daemon process for reliable execution Corporate Control: Docker Logs, SIEM</data>
</edge>
<edge source="C" target="D">
<data key="label">Ensure daemon backdoor survives system reboots Corporate Control: Docker Auto-Start Settings, Persistent Volumes</data>
</edge>
<edge source="C" target="D">
<data key="label">Reapply malicious container daemon if disrupted Corporate Control: Container Recovery, Docker Daemon Configuration</data>
</edge>
<edge source="D" target="E">
<data key="label">Hide malicious daemon activity from user interface Corporate Control: Task Manager, Event Logs</data>
</edge>
<edge source="D" target="E">
<data key="label">Blend malicious daemon execution with legitimate system activities Corporate Control: Docker Logs, Process Monitoring</data>
</edge>
<edge source="D" target="E">
<data key="label">Ensure undetectable persistence through daemon hijacking Corporate Control: Antivirus, EDR Tools</data>
</edge>
<edge source="D" target="E">
<data key="label">Monitor daemon behavior for stealth Corporate Control: SIEM Systems, Security Operations Center</data>
</edge>
</graph>
</graphml>
