<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">
<graph id="Abusing_Windows_Startup_Logon_Scripts" edgedefault="directed">
<!--  Nodes  -->
<node id="A">
<data key="label">Identify Windows Startup Logon Script Locations</data>
</node>
<node id="B">
<data key="label">Modify or Create Malicious Logon Scripts</data>
</node>
<node id="C">
<data key="label">Monitor and Maintain Logon Script Execution</data>
</node>
<node id="D">
<data key="label">Conceal Logon Script Modifications</data>
</node>
<node id="E">
<data key="label">Persistence Achieved via Windows Startup Logon Scripts</data>
</node>
<!--  Edges with Conditions/Weaknesses  -->
<edge source="A" target="B">
<data key="label">Enumerate startup logon script locations (C:\Windows\System32\GroupPolicy\User\Scripts\Logon) Corporate Control: Windows File System</data>
</edge>
<edge source="A" target="B">
<data key="label">Identify accounts with permissions to modify startup logon scripts Corporate Control: Active Directory Policies</data>
</edge>
<edge source="A" target="B">
<data key="label">Prepare attacker-controlled scripts for execution Corporate Control: Internal File Repositories</data>
</edge>
<edge source="A" target="B">
<data key="label">Analyze security policies monitoring startup logon execution Corporate Control: Event Viewer</data>
</edge>
<edge source="A" target="B">
<data key="label">Modify startup logon scripts to execute payload Corporate Control: Group Policy Management Console</data>
</edge>
<edge source="B" target="C">
<data key="label">Ensure scripts execute during every user logon Corporate Control: Windows Startup Configuration</data>
</edge>
<edge source="B" target="C">
<data key="label">Validate execution through test user sessions Corporate Control: Logon Activity Logs</data>
</edge>
<edge source="B" target="C">
<data key="label">Apply obfuscation techniques (VBScript encoding, PowerShell obfuscation) Corporate Control: Windows Scripting Host</data>
</edge>
<edge source="B" target="C">
<data key="label">Monitor startup script activity for unauthorized modifications Corporate Control: SIEM Systems</data>
</edge>
<edge source="C" target="D">
<data key="label">Ensure persistence through Group Policy updates Corporate Control: Policy Management Tools</data>
</edge>
<edge source="C" target="D">
<data key="label">Validate stealth of script execution against endpoint security Corporate Control: Windows Defender, SIEM Logs</data>
</edge>
<edge source="C" target="D">
<data key="label">Periodically modify script metadata to evade detection Corporate Control: File System Logs</data>
</edge>
<edge source="C" target="D">
<data key="label">Remove logs of script modifications Corporate Control: Event Viewer</data>
</edge>
<edge source="D" target="E">
<data key="label">Obfuscate script contents and file attributes Corporate Control: File Metadata Editor</data>
</edge>
<edge source="D" target="E">
<data key="label">Blend malicious startup scripts with legitimate configurations Corporate Control: Group Policy Management</data>
</edge>
<edge source="D" target="E">
<data key="label">Continuously monitor startup script execution Corporate Control: Security Operations Center</data>
</edge>
<edge source="D" target="E">
<data key="label">Ensure persistence across system reboots Corporate Control: Windows Startup Configuration</data>
</edge>
<edge source="D" target="E">
<data key="label">Obfuscate execution paths to evade detection Corporate Control: SIEM Systems</data>
</edge>
</graph>
</graphml>
