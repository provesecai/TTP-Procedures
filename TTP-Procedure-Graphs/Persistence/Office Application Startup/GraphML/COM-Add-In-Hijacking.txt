<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">
<graph id="COM-Add-In-Hijacking" edgedefault="directed">
<!--  Nodes  -->
<node id="A">
<data key="label">Analyze COM Add-In Mechanisms</data>
</node>
<node id="B">
<data key="label">Deploy Malicious COM Object for Office Applications</data>
</node>
<node id="C">
<data key="label">Maintain Persistence via Auto-Loading COM Add-In</data>
</node>
<node id="D">
<data key="label">Prevent Detection and Monitoring</data>
</node>
<node id="E">
<data key="label">Persistence Achieved via COM Add-In Hijacking</data>
</node>
<!--  Edges with Conditions  -->
<edge source="A" target="B">
<data key="label">Identify COM Add-In locations Corporate Control: Windows Registry, Office Configuration</data>
</edge>
<edge source="A" target="B">
<data key="label">Analyze existing COM add-ins Corporate Control: Windows COM API, Office COM Registry Keys</data>
</edge>
<edge source="A" target="B">
<data key="label">Determine best way to register a malicious COM add-in Corporate Control: COM Object Creation, Office Add-In Manager</data>
</edge>
<edge source="A" target="B">
<data key="label">Monitor registry modifications for unauthorized COM add-ins Corporate Control: SIEM, Registry Event Logs</data>
</edge>
<edge source="B" target="C">
<data key="label">Register malicious COM object for Office auto-execution Corporate Control: Windows COM Infrastructure</data>
</edge>
<edge source="B" target="C">
<data key="label">Ensure add-in is loaded on every Office startup Corporate Control: Office Add-In Loader</data>
</edge>
<edge source="B" target="C">
<data key="label">Modify execution flow to evade security controls Corporate Control: Office Macro Security, GPO</data>
</edge>
<edge source="B" target="C">
<data key="label">Monitor Office COM execution behavior Corporate Control: Threat Intelligence, Endpoint Security</data>
</edge>
<edge source="C" target="D">
<data key="label">Maintain COM add-in persistence across software updates Corporate Control: Patch Management, Registry Persistence</data>
</edge>
<edge source="C" target="D">
<data key="label">Ensure redundant COM objects exist in case of removal Corporate Control: Alternate COM Registration</data>
</edge>
<edge source="C" target="D">
<data key="label">Modify add-in properties to prevent user visibility Corporate Control: Office Add-In Management UI</data>
</edge>
<edge source="C" target="D">
<data key="label">Monitor COM interactions for anomalies Corporate Control: Security Operations, Threat Intelligence</data>
</edge>
<edge source="D" target="E">
<data key="label">Encrypt COM object properties to avoid detection Corporate Control: Code Obfuscation, File Encryption</data>
</edge>
<edge source="D" target="E">
<data key="label">Modify security logs to hide unauthorized COM modifications Corporate Control: Windows Event Logs, Office Logs</data>
</edge>
<edge source="D" target="E">
<data key="label">Deploy additional persistence mechanisms as fallback Corporate Control: Multiple COM Object Registrations</data>
</edge>
<edge source="D" target="E">
<data key="label">SOC continuously monitors Office COM interactions Corporate Control: SIEM, Threat Hunting</data>
</edge>
</graph>
</graphml>
