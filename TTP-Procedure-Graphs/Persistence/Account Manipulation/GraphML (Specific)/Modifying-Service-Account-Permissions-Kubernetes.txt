<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">
<graph id="Modifying_Service_Account_Permissions_Kubernetes" edgedefault="directed">
<!--  Nodes  -->
<node id="A">
<data key="label">Identify Kubernetes Service Accounts</data>
</node>
<node id="B">
<data key="label">Modify Service Account Permissions</data>
</node>
<node id="C">
<data key="label">Test Service Account Functionality</data>
</node>
<node id="D">
<data key="label">Conceal Modified Service Accounts</data>
</node>
<node id="E">
<data key="label">Persistence Achieved via Service Accounts</data>
</node>
<!--  Edges  -->
<edge source="A" target="B">
<data key="label">List existing service accounts in the cluster Corporate Control: Kubernetes API Server</data>
</edge>
<edge source="A" target="B">
<data key="label">Identify accounts with high-privilege roles Corporate Control: Role-Based Access Control (RBAC)</data>
</edge>
<edge source="A" target="B">
<data key="label">Analyze permissions granted to service accounts Corporate Control: Kubernetes RoleBindings</data>
</edge>
<edge source="A" target="B">
<data key="label">Assess monitoring of service account activity Corporate Control: Kubernetes Audit Logs</data>
</edge>
<edge source="B" target="C">
<data key="label">Modify service accounts to include elevated permissions Corporate Control: RBAC Configuration</data>
</edge>
<edge source="B" target="C">
<data key="label">Create new service accounts with persistent access Corporate Control: Kubernetes API Server</data>
</edge>
<edge source="B" target="C">
<data key="label">Link malicious accounts to sensitive namespaces Corporate Control: Namespace Configurations</data>
</edge>
<edge source="B" target="C">
<data key="label">Ensure accounts bypass monitoring configurations Corporate Control: Kubernetes Dashboard</data>
</edge>
<edge source="C" target="D">
<data key="label">Execute actions using modified accounts Corporate Control: Kubernetes Pods</data>
</edge>
<edge source="C" target="D">
<data key="label">Validate service account functionality over time Corporate Control: Kubernetes Deployment Logs</data>
</edge>
<edge source="C" target="D">
<data key="label">Monitor account usage across cluster updates Corporate Control: Cluster Maintenance Tools</data>
</edge>
<edge source="C" target="D">
<data key="label">Ensure persistence by testing access redundancy Corporate Control: Kubernetes Failover Configurations</data>
</edge>
<edge source="D" target="E">
<data key="label">Delete logs showing service account modifications Corporate Control: Kubernetes Audit Logs</data>
</edge>
<edge source="D" target="E">
<data key="label">Mask changes to RBAC configurations Corporate Control: Configuration Management Tools</data>
</edge>
<edge source="D" target="E">
<data key="label">Ensure service accounts blend with legitimate users Corporate Control: Role Insights</data>
</edge>
<edge source="D" target="E">
<data key="label">Monitor modified accounts to maintain persistence Corporate Control: Kubernetes Observability Tools</data>
</edge>
</graph>
</graphml>
