<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">
<graph id="Adding_SSH_Keys_to_GitHub_User_Accounts" edgedefault="directed">
<!--  Nodes  -->
<node id="A">
<data key="label">Identify Target GitHub User Accounts</data>
</node>
<node id="B">
<data key="label">Add Attacker-Controlled SSH Keys</data>
</node>
<node id="C">
<data key="label">Test SSH Access with New Keys</data>
</node>
<node id="D">
<data key="label">Conceal SSH Key Changes</data>
</node>
<node id="E">
<data key="label">Persistence Achieved via GitHub SSH Keys</data>
</node>
<!--  Edges  -->
<edge source="A" target="B">
<data key="label">Enumerate user accounts with repository access Corporate Control: GitHub API</data>
</edge>
<edge source="A" target="B">
<data key="label">Check for accounts with weak or reused passwords Corporate Control: GitHub Authentication Logs</data>
</edge>
<edge source="A" target="B">
<data key="label">Identify accounts with SSH key-based authentication enabled Corporate Control: GitHub Settings</data>
</edge>
<edge source="A" target="B">
<data key="label">Assess logging and alerting for SSH key changes Corporate Control: GitHub Audit Logs</data>
</edge>
<edge source="B" target="C">
<data key="label">Add new SSH keys to user accounts Corporate Control: GitHub SSH Key Management</data>
</edge>
<edge source="B" target="C">
<data key="label">Ensure keys provide write access to critical repositories Corporate Control: GitHub Repository Settings</data>
</edge>
<edge source="B" target="C">
<data key="label">Use SSH key descriptions that blend with legitimate keys Corporate Control: GitHub Key Configuration</data>
</edge>
<edge source="B" target="C">
<data key="label">Verify added keys bypass MFA requirements Corporate Control: GitHub Authentication Configurations</data>
</edge>
<edge source="C" target="D">
<data key="label">Access repositories using the new SSH keys Corporate Control: GitHub Repository Access Logs</data>
</edge>
<edge source="C" target="D">
<data key="label">Test repository actions (e.g., cloning, commits) Corporate Control: GitHub Repository APIs</data>
</edge>
<edge source="C" target="D">
<data key="label">Ensure keys remain functional after password changes Corporate Control: GitHub Authentication System</data>
</edge>
<edge source="C" target="D">
<data key="label">Validate key persistence across account updates Corporate Control: GitHub User Management</data>
</edge>
<edge source="D" target="E">
<data key="label">Delete logs showing SSH key addition or usage Corporate Control: GitHub Audit Logs</data>
</edge>
<edge source="D" target="E">
<data key="label">Mask keys by modifying metadata (e.g., timestamps) Corporate Control: GitHub Key Metadata Settings</data>
</edge>
<edge source="D" target="E">
<data key="label">Ensure new keys are indistinguishable from legitimate ones Corporate Control: GitHub Key List Interface</data>
</edge>
<edge source="D" target="E">
<data key="label">Monitor key activity to ensure long-term persistence Corporate Control: GitHub Security Insights</data>
</edge>
</graph>
</graphml>
